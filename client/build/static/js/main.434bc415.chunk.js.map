{"version":3,"sources":["util/constants.js","db/entries.js","util/formatHelpers.js","components/Slot/SlotView/ColumnRow.js","db/drivers.js","util/driverDbHelpers.js","components/Timetable/TimetableHandlers.js","components/Timetable/Timetable.js","util/entryValidationHelpers.js","util/dbHelpers.js","components/Slot/SlotControllers/SlotControllers.js","components/Slot/SlotView/SlotView.js","actions/errorActions.js","components/EntryForm/EntryFormHandlers.js","hooks/useFormHook.js","db/schema/Entry.js","components/EntryForm/EntryForm.js","actions/driverActions.js","components/Slot/SlotHandlers.js","actions/timetableNavigation.js","components/Slot/Slot.js","components/Controllers/ControllersHandlers.js","actions/timetableFilterActions.js","components/Controllers/Controllers.js","components/ErrorPrompt/ErrorPromptHandlers.js","components/ErrorPrompt/ErrorPrompt.js","components/AppView/AppView.js","util/dateHelpers.js","components/Suggestions/SuggestionsHandlers.js","components/Suggestions/SuggestionsControllers.js","components/Suggestions/Suggestions.js","components/Nav/NavHandlers.js","actions/appViewActions.js","actions/slideInActions.js","components/Nav/NavControllers.js","components/Nav/Nav.js","components/DriverDropdown/DriverDropdown.js","components/StretchComponents/DriversList/DriversListHandlers.js","components/StretchComponents/DriversList/DriversList.js","components/StretchComponents/DriverInfo/DriverInfoControllers.js","actions/editModeActions.js","components/StretchComponents/DriverInfo/AvailabilityTable/AvailabilityTableHandlers.js","components/StretchComponents/DriverInfo/AvailabilityTable/Checkbox.js","components/StretchComponents/DriverInfo/AvailabilityTable/EditAvailability.js","components/StretchComponents/DriverInfo/AvailabilityTable/AvailabilityTable.js","components/StretchComponents/DriverInfo/DriverHandlers.js","components/StretchComponents/DriverInfo/DriverInfo.js","components/StretchComponents/ReportTable/ReportTableHelpers.js","components/StretchComponents/ReportTable/ReportTableRenders.js","components/StretchComponents/ReportTable/ReportTableHandlers.js","components/StretchComponents/ReportTable/ReportTable.js","views/DriversView.js","views/ScheduleView.js","views/ReportView.js","App.js","reducers/testReducer.js","reducers/dateReducer.js","reducers/driverReducer.js","reducers/entryFormReducer.js","reducers/errorReducer.js","reducers/appViewReducer.js","reducers/slideInReducer.js","reducers/editModeReducer.js","reducers/timetableFilterReducers.js","reducers/index.js","index.js"],"names":["APP_VIEWS","DAY_WORDS","DRIVERS","DESCRIPTIONS","DAY_RANGES","entries","date","description","driver","dayToWords","index","parseInt","dateObjToStringID","dateObj","week","day","hour","hourTo12hFormat","_hour","dateStrToWords","dateStr","split","week_day_str_to_day_x","wwdd","dayCount","ColumnRow","hours","className","days","drivers","Anna","name","color","availability","0","2","4","6","Bob","1","3","Chris","5","getDriverData","callback","TimetableHandlers","store","useState","driverAvailability","setDriverAvailability","isWithinAvailability","includes","renderSlots","slots","bookableDay","push","key","handleGetDriverAvailability","data","console","log","Timetable","useSelector","state","handlers","useEffect","ALL","entryValidationHelpers","currentDriver","filteredDB","getDriverEntries","isBooked","dateID","validate","entryValidation","createEntry","entryObj","errMsg","bookedSlot","error","payload","bookingAttempt","msg","filteredByDriver","entryID","currentEntry","editEntry","SlotControllers","props","setFormOpen","formOpen","bookedData","setBookedData","isVisible","deleteConfirm","setDeleteConfirm","handleFormToggle","e","preventDefault","toggleDeleteConfirmation","controlsVisibility","classNames","Button","onClick","SlotView","driverData","setDriverData","viewFilters","showBookableSlots","showOutsideAvailability","driverColor_css","position","top","right","display","background","height","width","style","setError","errObj","type","EntryFormHandlers","dispatch","values","handleChange","handleEmptyValue","renderDriverDropdown","options","map","i","value","onChange","disabled","hidden","renderDescriptionDropdown","handleValidation","successCallback","useForm","initState","submitCallback","setState","handleSubmit","handleReset","resetState","persist","target","prev","Entry","EntryForm","handleEntrySuccess","useDispatch","close","onSubmit","setDriver","val","SlotHandlers","validation","handleStyling","handleSlotClick","updateDate","Slot","setIsVisible","slotStyles","booked","outsideAvailability","handleEntryErr","onMouseEnter","onMouseLeave","success","err","ControllersHandlers","toggleWeek","innerHTML","WEEKS","handleCheckbox","element","toggleDriver","toggleDropdown","dropdownOpen","renderDropdownItems","DropdownItem","divider","renderWeekNavBtns","btn","renderFilterCheckboxes","checked","htmlFor","Controllers","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","ErrorPromptHandlers","handleDismiss","renderConflictingBooking","booking","dateObjToWords","toUpperCase","handleOverwrite","ErrorPrompt","AppView","handleCloseError","appView","errorStyle","left","slideInToggled","dateUtil","aheadDate","selector","delta","newDate","behindDate","setBreaker","SuggestionsHandlers","currentDate","occupiedSlots","Object","keys","calcWithinHour","breaker","suggestion","generateSuggestions","handleSuggestionSubmit","selectedSuggestion","entry","renderSuggestions","suggestions","suggestionObj","SuggestionsControllers","withinDay","withinWeek","differentWeek","Dropdown","header","Suggestions","setWithinDay","setWithinWeek","setDifferentWeek","NavHandlers","handleChangeView","view","renderNavItems","styling","handleToggleSlideIn","NavControllers","Nav","DriverDropdown","setDropdownOpen","handleUpdateDriver","selectedDriver","innerText","renderItems","dropdown_txt","prevState","DriversListHandlers","handleExpandInfo","renderDriversList","drivers_li","btn_txt","DriversList","DriverInfoControllers","editMode","handleToggleEditMode","handleUpdateDB","setEditMode","bool","AvailabilityTableHandlers","parentHandlers","renderStartEnd","arr","day_i","start","end","length","renderRows","css_class","preferences","sortedArr","sort","a","b","consecutiveSets","currentSet","prevNum","forEach","num","groupConsecutiveHours","grouping","Checkbox","dayIndex","setChecked","FormGroup","Input","newAvailObj","newHourArr","elem","newArr","indexOf","splice","removeFromArray","Label","hourAMorPM","EditAvailability","formJSX","resultJSX","renderHoursJSX","Form","AvailabilityTable","inset_class","DriverHandlers","cancelCache","setCancelCache","handleColorChange","driverObj","ID","updateDriverData","DriverInfo","util","mergeRows","arr1","arr2","flattened","weekAndDayMap","result","generateReportForPeriod","period","counters","obj","descriptionCounters","id","groupByTimeframe","timeframe","currentGrouping","generateTimeframeString","_start","_end","extractTableDataFromObj","dataObj","td_JSX","render","dropdownItems","items","item","dropdownMenu","tableHeaders","headers","tableRows","dataArr","rowTitles","jsx","currentTr","currentTitle","scope","ReportTableHandlers","timeFrame","setTimeFrame","mapping","report","group","timeframeRowStringMap","mergedRows","cachedCSVdata","handleRenderDropdown","handleRenderTable","Table","ReportTable","fileName","filename","DriversView","navToggledStyle","ScheduleView","ReportView","App","testReducer","action","initialState","dateReducer","driverReducer","entryFormReducer","errorReducer","appViewReducer","slideInReducer","editModeReducer","showControls","timetableFilterReducers","allReducers","combineReducers","test","entryForm","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","document","getElementById"],"mappings":"gkBAsBaA,EAAY,CAJG,eAEC,gBACF,eAUdC,EAAY,CACvB,SACA,SACA,UACA,YACA,WACA,SACA,YAOWC,EAAU,CAAC,MAAO,OAAQ,MAAO,SACjCC,EAAe,CAAC,WAAY,UAAW,QAmCvCC,EAAa,CAAC,EAAG,EAAG,EAAG,GAAI,IC9E3BC,EAAU,CACrB,SAAU,CACRC,KAAM,SACNC,YAAa,UACbC,OAAQ,OAEV,SAAU,CACRF,KAAM,SACNC,YAAa,OACbC,OAAQ,QAEV,QAAS,CACPF,KAAM,QACNC,YAAa,UACbC,OAAQ,QAEV,QAAS,CACPF,KAAM,QACNC,YAAa,UACbC,OAAQ,OAEV,QAAS,CACPF,KAAM,QACNC,YAAa,UACbC,OAAQ,U,qBCxBCC,G,MAAa,SAACC,GACzB,OAAOT,EAAUU,SAASD,MAKfE,EAAoB,SAACC,GAAa,IACrCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KACnB,MAAM,GAAN,OAAUF,EAAV,YAAkBC,EAAlB,YAAyBC,IAIdC,EAAkB,SAACD,GAC9B,IAAME,EAAQP,SAASK,GACvB,OAAc,IAAVE,EAAoB,WACV,KAAVA,EAAqB,WACrBA,EAAQ,GAAU,GAAN,OAAUA,EAAV,UACX,UAAUA,EAAQ,GAAlB,WAIMC,EAAiB,SAACC,GAC7B,GAAKA,EAAL,CADyC,MAEfA,EAAQC,MAAM,KAFC,mBAElCP,EAFkC,KAE5BC,EAF4B,KAEvBC,EAFuB,KAGzC,MAAM,QAAN,OAAeF,EAAf,aAAwBL,EAAWM,GAAnC,aAA4CE,EAAgBD,MAejDM,EAAwB,SAACC,GAAU,IAAD,EACzBA,EAAKF,MAAM,KADc,mBACtCP,EADsC,KAChCC,EADgC,KAEvCS,EAA4B,EAAjBb,SAASG,GAAYH,SAASI,GAC/C,MAAM,OAAN,OAAcS,ICdDC,EAzBG,SAAC,GAAmB,IAAjBV,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAElBU,GAAiB,IAATX,GACZ,yBAAKY,UAAS,4CAAuCZ,GAAvC,OAA6CC,IACxDC,EAAgBD,IAKfY,GAAiB,IAAVZ,GACX,yBAAKW,UAAS,gDAA2CZ,GAA3C,OAAiDC,IAC5DP,EAAWM,IAIhB,OACE,yBACEY,UAAS,sBAAiBX,EAAjB,iCAA8CD,EAA9C,kBAA2DA,GAA3D,OAAiEC,IAEzEU,GAASA,EACTE,GAAQA,IC1BFC,EAAU,CACrBC,KAAM,CACJC,KAAM,OACNC,MAAO,UACPC,aAAc,CACZC,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACvBC,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACvBC,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACvBC,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,MAG3BC,IAAK,CACHP,KAAM,MACNC,MAAO,UACPC,aAAc,CAEZC,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,IACpBK,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,IACpBC,EAAG,CAAC,GAAI,GAAI,GAAI,GAAI,MAGxBC,MAAO,CACLV,KAAM,QACNC,MAAO,UACPC,aAAc,CACZM,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACpCJ,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACpCK,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACpCE,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IACpCL,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,OCxB7BM,EAAgB,SAACnC,EAAQoC,GAEpC,OAAOA,EAASf,EAAQrB,KCyDXqC,EAvDW,SAACC,GAAU,MAEiBC,mBAAS,MAF1B,mBAE5BC,EAF4B,KAERC,EAFQ,KAa7BC,EAAuB,SAACnC,EAAKC,GACjC,QAAKgC,MAGDA,EAAmBjC,KAAQiC,EAAmBjC,GAAKoC,SAASnC,KAgClE,MAAO,CACLoC,YA3BkB,WAGlB,IADA,IAAMC,EAAQ,GACLtC,GAAO,EAAGA,ENLH,EMKeA,IAC7B,IAAK,IAAIC,GAAQ,EAAGA,ENIL,GMJmBA,IAAQ,CAExC,IAAMsC,EAAcJ,EAAqBnC,EAAKC,IAEjC,IAATD,IAAwB,IAAVC,EAChBqC,EAAME,KACJ,kBAAC,EAAD,CAAWC,IAAG,UAAKzC,EAAL,YAAYC,EAAZ,UAA0BD,IAAKA,EAAKC,KAAMA,KAG1DqC,EAAME,KACJ,kBAAC,EAAD,CACED,YAAaA,EACbE,IAAG,UAAKzC,EAAL,YAAYC,EAAZ,UACHD,IAAKA,EACLC,KAAMA,KAKhB,OAAOqC,GAKPI,4BA9CkC,WAClCd,EAAcG,EAAMtC,QAAQ,SAACkD,GAC3B,IAAKA,EAAM,OAAOT,EAAsB,MACxCU,QAAQC,IAAI,sBAAuBF,EAAKzB,cACxCgB,EAAsBS,EAAKzB,oBCYlB4B,EArBG,WAEhB,IAAMf,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAWnB,EAAkBC,GAMnC,OAJAmB,qBAAU,WACRD,EAASP,gCACR,CAACX,EAAMtC,SAGR,6BAEE,yBAAKmB,UAAU,8BACZqC,EAASZ,YAAYN,EAAMtC,W,QClB9B0D,EAAMhE,EAAQ,GAmBLiE,EAjBgB,SAACC,GAE9B,IAAMC,EACJD,GAAiBA,IAAkBF,EAC/BI,EAAiBF,GACjB/D,EAON,MAAO,CACLkE,SALe,SAACC,GAChB,OAAOH,EAAWG,MCJhBC,EAAWC,IAIJC,EAAc,SAACC,EAAUhC,GACpCe,QAAQC,IAAI,qBADqC,IAEzCtD,EAA8BsE,EAA9BtE,KAAMC,EAAwBqE,EAAxBrE,YAAaC,EAAWoE,EAAXpE,OAI3B,IAAKF,EAAM,OAAOsC,EAAS,KAAM,CAAEiC,OTsCR,kBSrC3B,IAAKrE,EAAQ,OAAOoC,EAAS,KAAM,CAAEiC,OTsCR,oBSrC7B,IAAKtE,EAAa,OAAOqC,EAAS,KAAM,CAAEiC,OTsCR,yBSnClC,IAAMC,EAAaL,EAASF,SAASjE,GACrC,GAAIwE,EAEF,OADAnB,QAAQoB,MT8BqB,oBS9BID,GAC1BlC,EAAS,KAAM,CACpBiC,OT4B2B,oBS3B3BG,QAASF,EACTG,eAAgBL,IAMpBvE,EAAQC,GAAQsE,EAGhBhC,EAAS,CAAEsC,ITyBmB,mBSzBIxB,KAAMkB,KAM7BN,EAAmB,SAACF,GAC/B,IAAMe,EAAmB,GACzB,IAAK,IAAIC,KAAW/E,EAAS,CAC3B,IAAMgF,EAAehF,EAAQ+E,GACzBC,EAAa7E,SAAW4D,IAC1Be,EAAiBC,GAAWC,GAGhC,OAAOF,GAUIG,EAAY,SAACV,EAAUhC,GAClCe,QAAQC,IAAI,oBADmC,IAEvCtD,EAA8BsE,EAA9BtE,KAA8BsE,EAAxBrE,YAAwBqE,EAAXpE,OAG3BH,EAAQC,GAAQsE,EAGhBhC,EAAS,CAAEsC,ITNmB,mBSMIxB,KAAMkB,K,wBC0B3BW,EAjFS,SAACC,GAAW,IAC1BC,EAAgED,EAAhEC,YAAaC,EAAmDF,EAAnDE,SAAUC,EAAyCH,EAAzCG,WAAYC,EAA6BJ,EAA7BI,cAAeC,EAAcL,EAAdK,UADzB,EAIS9C,oBAAS,GAJlB,mBAI1B+C,EAJ0B,KAIXC,EAJW,KAO3BjD,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAGrCE,qBAAU,kBAAM8B,GAAiB,KAAQ,CAACjD,EAAMxC,KAAKQ,OAErD,IAAMkF,EAAmB,SAACC,GACxBA,GAAKA,EAAEC,iBACPT,GAAY,SAAC1B,GAAD,OAAYA,MAcpBoC,EAA2B,SAACF,GAChCA,GAAKA,EAAEC,iBAEPT,GAAY,GACZM,GAAkBD,IAGdM,EAAqBC,IAAW,iCAAkC,CACtER,cAGF,OACE,8BAEIH,IAAaC,GACb,kBAACW,EAAA,EAAD,CACE3E,UAAS,4BAAuByE,GAChCG,QAASP,GVVI,UUiBhBL,IAAeG,GACd,yBAAKnE,UAAS,yCAAoCyE,IAChD,kBAACE,EAAA,EAAD,CAAQC,QAASP,GVtBH,QUuBd,kBAACM,EAAA,EAAD,CAAQtE,MAAM,SAASuE,QAASJ,GVtBhB,WU6BnBL,GACC,oCACE,0BAAMnE,UAAU,mCAAhB,iBACA,yBACEA,UAAS,yCAAoCyE,IAE7C,kBAACE,EAAA,EAAD,CAAQtE,MAAM,SAASuE,QAnDZ,SAACN,GD2CG,IAAC3F,EAAMsC,EC1C9BqD,EAAEC,iBD0CsB5F,ECzCZqF,EAAWrF,KDyCOsC,ECzCD,WAC3Be,QAAQC,IV8BkB,oBU5B1BgC,EAAc,MAEdO,KDqCJxC,QAAQC,IAAI,4BAELvD,EAAQC,GAEfsC,EAAS,QThCe,UUsCd,kBAAC0D,EAAA,EAAD,CAAQtE,MAAM,UAAUuE,QAASJ,GVrCnB,cWEXK,G,MA9CE,SAAC,GAA4B,EAA1B3F,QAA2B,IAAlB8E,EAAiB,EAAjBA,WAAiB,EAER5C,mBAAS,MAFD,mBAErC0D,EAFqC,KAEzBC,EAFyB,OAK9B5C,aAAY,SAACC,GAAD,OAAWA,KACwB4C,YANjB,EAMpCC,kBANoC,EAMjBC,wBAE3B5C,qBAAU,WACJ0B,GACFhD,EAAcgD,EAAWnF,QAAQ,SAACkD,GAChCgD,EAAchD,QAGjB,CAACiC,IAKJ,IAAMmB,EAAkBL,GAAc,CACpCM,SAAU,WACVC,IAAK,GACLC,MAAO,GACPC,QAAS,eACTC,WAAYV,EAAWzE,MACvBoF,OAAQ,GACRC,MAAO,IAGT,OACE,6BACG1B,GAAcc,GACb,yBAAK9E,UAAU,4BACb,wCACA,6BACGgE,EAAWnF,OACZ,yBAAK8G,MAAOR,KAEd,6CACA,6BAAMnB,EAAWpF,iBC/CdgH,G,MAAW,SAACC,GACvB,MAAO,CACLC,KZGqB,YYFrBzC,QAASwC,KCuFEE,EAhFW,SAACC,EAAUC,EAAQC,GAC3C,IAAMC,EAAmB,SAACjD,GACxBlB,QAAQoB,MAAMF,GACd8C,EAASJ,EAAS,CAAE1C,SAAQG,QAAS,SAqEvC,MAAO,CACL+C,qBA3D2B,WAC3B,IAAMC,EAAU9H,EAAQ+H,KAAI,SAACzH,EAAQ0H,GAEnC,OAAU,IAANA,OAAS,EAGT,4BACEvG,UAAU,oBACV6B,IAAG,UAAKhD,EAAL,aACH2H,MAAO3H,GAENA,MAKT,OACE,4BACEmB,UAAU,oBACVwG,MAAOP,EAAOpH,QAAU,UACxBuB,KAAK,SACLqG,SAAUP,GAEV,4BAAQM,MAAM,UAAUE,UAAQ,EAACC,QAAM,GAAvC,iBAGCN,IAkCLO,0BA5BgC,WAChC,IAAMP,EAAU7H,EAAa8H,KAAI,SAAC1H,GAAD,OAC/B,4BACEoB,UAAU,oBACV6B,IAAG,UAAKjD,EAAL,aACH4H,MAAO5H,GAENA,MAIL,OACE,4BACEoB,UAAU,oBACVwG,MAAOP,EAAOrH,aAAe,UAC7BwB,KAAK,cACLqG,SAAUP,GAEV,4BAAQM,MAAM,UAAUE,UAAQ,EAACC,QAAM,GAAvC,sBAGCN,IAQLF,mBACAU,iBAtEuB,SAACC,GACxB,OAAKb,EAAOpH,OACPoH,EAAOrH,iBAEZkI,IAFgCX,Eb2CA,wBa5CLA,Eb2CA,sB,ecrChBY,EAvBC,WAAqC,IAApCC,EAAmC,uDAAvB,GAAIC,EAAmB,yCACxB7F,mBAAS4F,GADe,mBAC3C5E,EAD2C,KACpC8E,EADoC,KAG5CC,EAAe,SAAC7C,GACpBA,EAAEC,iBACF0C,KAGIG,EAAc,WAClB,IAAMC,EAAa,GACnB,IAAK,IAAIxF,KAAOO,EAAOiF,EAAWxF,GAAO,GACzCqF,EAASG,IAGLnB,EAAe,SAAC5B,GACpBA,EAAEgD,UADwB,MAEFhD,EAAEiD,OAAlBnH,EAFkB,EAElBA,KAAMoG,EAFY,EAEZA,MACdU,GAAS,SAACM,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBpH,EAAOoG,QAGzC,MAAO,CAACpE,EAAO8D,EAAciB,EAAcC,ICbhCK,EAAQ,SAACxE,GAEpB,IAAKA,EAAU,OAAOjB,QAAQoB,MfsDC,qBexDE,IAIzBzE,EAA8BsE,EAA9BtE,KAAMC,EAAwBqE,EAAxBrE,YAAaC,EAAWoE,EAAXpE,OAG3B,OAAKF,GAASC,GAAgBC,EACzBF,EACAC,EACAC,EAEE,CAAEF,OAAMC,cAAaC,UAFRmD,QAAQoB,Mf2CC,mBe5CJpB,QAAQoB,Mf6CC,wBe9ChBpB,QAAQoB,Mf4CC,iBe7CkBpB,QAAQoB,MfiDtB,sBgBoBlBsE,EA7DG,SAAC7D,GAAW,IACpB8D,EAAyD9D,EAAzD8D,mBAAoB3D,EAAqCH,EAArCG,WAAYF,EAAyBD,EAAzBC,YAAa5E,EAAY2E,EAAZ3E,QAD1B,EAK+B6H,EADxC/C,GAAcA,GAG9B,WAEE3B,EAASwE,kBAAiB,WAExB,IAAM5D,EAAWwE,EAAM,CACrB9I,KAAMM,EAAkBC,GACxBL,OAAQoH,EAAOpH,OACfD,YAAaqH,EAAOrH,cAGtB,GAAIoF,EAAY,OAAOL,EAAUV,EAAU0E,GACtC3E,EAAYC,EAAU0E,SAlBN,mBAKpB1B,EALoB,KAKZC,EALY,KAKEiB,EALF,KAwBrBnB,GAxBqB,KAwBV4B,eAGXvF,EAAW0D,EAAkBC,EAAUC,EAAQC,GAOrD,OACE,yBAAKlG,UAAU,wBACb,kBAAC2E,EAAA,EAAD,CACE3E,UAAU,uBACV4E,QATkB,SAACN,GACvBA,EAAEC,iBACFT,GAAY,IAQR+D,OAAK,IAGP,0BAAM7H,UAAU,kBAAkB8H,SAAUX,GAC1C,yBAAKnH,UAAU,4BAEb,wCACCqC,EAAS+D,uBAGV,6CACC/D,EAASuE,6BAGZ,kBAACjC,EAAA,EAAD,CAAQtE,MAAM,UAAUyF,KAAK,UhB1BX,aiBjDbiC,EAAY,SAACC,GACxB,MAAO,CACLlC,KjBEsB,aiBDtBzC,QAAS2E,ICwBEC,EAtBM,SAACjC,EAAU9G,EAASiC,GACvC,IAAM+G,EAAanF,EAAgB5B,EAAMtC,QAezC,MAAO,CACLsJ,cARoB,SAAClH,GAErB,IAAM4B,EAAS5D,EAAkBC,GAEjC+B,EADmBiH,EAAWtF,SAASC,KAMvCuF,gBAfsB,WAElBnJ,EAAkBkC,EAAMxC,QAAUM,EAAkBC,IACnD8G,EC6BiB,SAAC9G,GACzB,MAAO,CACL4G,KnBvCuB,cmBwCvBzC,QAASnE,GDhCKmJ,CAAWnJ,OEwFdoJ,EAnFF,SAAC,GAAgC,IAA9BlJ,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,KAAMsC,EAAkB,EAAlBA,YAAkB,EAEPP,mBAAS,MAFF,mBAEpC4C,EAFoC,KAExBC,EAFwB,OAGX7C,oBAAS,GAHE,mBAGpC2C,EAHoC,KAG1BD,EAH0B,OAIT1C,oBAAS,GAJA,mBAIpC8C,EAJoC,KAIzBqE,EAJyB,KAOrCvC,EAAW4B,cACXzG,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KARM,EASYjB,EAAM6D,YAArDC,EATmC,EASnCA,kBAAmBC,EATgB,EAShBA,wBAGrBhG,EAAU,CAAEC,KAAMgC,EAAMxC,KAAKQ,KAAMC,MAAKC,QAGxCgD,EAAW4F,EAAajC,EAAU9G,EAASiC,GAEjDmB,qBAAU,WAIR,OAFAD,EAAS8F,eAAc,SAACnE,GAAD,OAAgBC,EAAcD,MAE9C,WAELF,GAAY,MAEb,CAAC3C,EAAMxC,KAAKQ,KAAMgC,EAAMtC,SAG3B,IAAM2J,EAAa9D,IAAW,CAC5B+D,OAAQzE,EACRrC,YAAasD,GAAqBtD,EAClC+G,oBAAqBxD,GAA2BlB,IAAerC,IAgB3DgH,EAAiB,SAAC9C,GAEtBG,EAASJ,EAASC,KAGpB,OACE,yBACE+C,aAAc,kBAAML,GAAa,IACjCM,aAAc,kBAAMN,GAAa,IACjC3D,QAASvC,EAAS+F,gBAClBpI,UAAS,+BAA0BZ,EAA1B,YAAiCoJ,KAExCzE,GAAY,kBAAC,EAAD,CAAU7E,QAASA,EAAS8E,WAAYA,KAEpDD,GACA,kBAAC,EAAD,CACEG,UAAWA,EACXJ,YAAaA,EACbC,SAAUA,EACVC,WAAYA,EACZC,cAAeA,IAIlBF,GACC,kBAAC,EAAD,CACE7E,QAASA,EACT4E,YAAaA,EACbE,WAAYA,EACZ2D,mBA1CmB,SAACmB,EAASC,GAEnC,GAAIA,EAAK,OAAOJ,EAAeI,GAC/B/G,QAAQC,IAAI6G,EAAQvF,KAEpBU,EAAc6E,EAAQ/G,MAEtB+B,GAAY,GAER3C,EAAMtC,SAAWN,EAAQ,IACxByH,EAAS+B,EAAUe,EAAQ/G,KAAKlD,c,2CCiE1BmK,EA3Ga,SAAC9B,EAAUlB,EAAU7E,GAAW,IAAD,EACFA,EAAM6D,YAArDC,EADiD,EACjDA,kBAAmBC,EAD8B,EAC9BA,wBAGrB+D,EAAa,SAAC3E,GAGlB,OAFAA,EAAEC,iBAEMD,EAAEiD,OAAO2B,WACf,IrBqBsB,SqBnBpB,GAAI/H,EAAMxC,KAAKQ,MAAQ,EAAG,OAC1B,OAAO6G,EFAN,CACLF,KnB5BqB,cqB4BnB,IrBkBsB,SqBhBpB,GAAI3E,EAAMxC,KAAKQ,MAAQgK,GAAW,OAClC,OAAOnD,EFVN,CACLF,KnBvBqB,gBqByCjBsD,EAAiB,SAAC9E,GACtB0B,ECnCK,CACLF,KtBGiC,wBsBFjCuD,QDiCsB/E,EAAEiD,OAAOnH,QAI3BkJ,EAAe,SAAChF,GACpB,IAAMzF,EAASyF,EAAEiD,OAAO2B,UAExBlD,EAAS+B,EAAUlJ,KAmErB,MAAO,CACL0K,eAhFqB,WACrBrC,GAAS,SAAC9E,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBoH,cAAepH,EAAMoH,mBAgFtDC,oBAjE0B,WAC1B,OAAOlL,EAAQ+H,KAAI,SAACzH,EAAQ0H,GAC1B,OAAU,IAANA,EAEA,yBAAK1E,IAAG,UAAKhD,EAAL,SACN,kBAAC6K,EAAA,EAAD,CAAc9E,QAAS0E,GAAezK,GACtC,kBAAC6K,EAAA,EAAD,CAAcC,SAAO,KAKzB,kBAACD,EAAA,EAAD,CAAc7H,IAAG,UAAKhD,EAAL,YAAe0H,GAAK3B,QAAS0E,GAC3CzK,OAsDP+K,kBA/CwB,WAExB,MADa,CrB3BW,SACA,UqB2BZtD,KAAI,SAACuD,GAAD,OACd,4BACE7J,UAAS,oCAA+B6J,GACxChI,IAAG,UAAKgI,EAAL,QACHjF,QAASqE,GAERY,OAwCLC,uBAlC6B,SAACjL,GAC9B,OACE,yBAAKmB,UAAU,4CACZnB,IAAWN,EAAQ,IAClB,oCACE,2BACEuH,KAAK,WACLiE,QAAS9E,EACTwB,SAAU2C,EACVhJ,KAAK,sBAEP,2BAAO4J,QAAQ,qBAAf,8CAMJ,2BACElE,KAAK,WACLiE,QAAS7E,EACTuB,SAAU2C,EACVhJ,KAAK,4BAEP,2BAAO4J,QAAQ,2BAAf,iDEnDOC,EAjDK,WAAM,MAEE7I,mBAAS,CACjCoI,cAAc,IAHQ,mBAEjBpH,EAFiB,KAEV8E,EAFU,KAOlBlB,EAAW4B,cACXzG,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAW2G,EAAoB9B,EAAUlB,EAAU7E,GAEzD,OACE,yBAAKnB,UAAU,0BAEb,6BACE,yBAAKA,UAAU,gCACb,0BAAMA,UAAU,cAAhB,eACA,kBAACkK,EAAA,EAAD,CACEC,OAAQ/H,EAAMoH,aACdY,OAAQ/H,EAASkH,gBAEjB,kBAACc,EAAA,EAAD,CAAgBC,OAAK,GAAEnJ,EAAMtC,QAC7B,kBAAC0L,EAAA,EAAD,KAEGlI,EAASoH,0BAOlB,6BACE,yBAAKzJ,UAAU,mCACZqC,EAASuH,oBACV,0BAAM5J,UAAU,sCAAhB,QACQmB,EAAMxC,KAAKQ,QAOvB,6BAAMkD,EAASyH,uBAAuB3I,EAAMtC,WCGnC2L,G,MA7Ca,SAACxE,EAAU5C,GAErC,IAAMqH,EAAgB,WACpBzE,EZPK,CACLF,KZqDuB,iBwBZzB,MAAO,CACL4E,yBAjB+B,WAC/B,IAAMC,EAAUvH,EAAMC,QACd1E,EAA8BgM,EAA9BhM,KAAMC,EAAwB+L,EAAxB/L,YAAaC,EAAW8L,EAAX9L,OAFU,EAGXF,EAAKe,MAAM,KAHA,mBAI/BR,EAAU,CAAEC,KAJmB,KAIbC,IAJa,KAIRC,KAJQ,MAKrC,OACE,yBAAKW,UAAU,uCACb,0BAAMA,UAAU,iBtBNM,SAACd,GAC7B,OAAOM,EAAeP,EAAkBC,IsBKD0L,CAAe1L,IAChD,yDACA,0BAAMc,UAAU,iBAAiBnB,EAAOgM,eACxC,uCACA,0BAAM7K,UAAU,iBAAiBpB,KAOrC6L,gBACAK,gBAlCsB,WAEtB,IAAM7H,EAAWwE,EAAMrE,EAAME,gBAG7BK,EAAUV,GAAU,WAClBjB,QAAQC,IxB4CqB,uBwB1C7B+D,EAAS+B,EAAUxJ,EAAQ,KAE3BkM,WCcSM,EAjCK,WAElB,IAAM/E,EAAW4B,cACXxE,EAAQjB,aAAY,SAACC,GAAD,OAAWA,EAAMgB,SAGrCf,EAAWmI,EAAoBxE,EAAU5C,GAE/C,OACE,yBAAKpD,UAAU,0BACb,kBAAC2E,EAAA,EAAD,CACE3E,UAAU,2BACV6H,OAAK,EACLjD,QAASvC,EAASoI,gBAEpB,0BAAMzK,UAAU,uBAAuBoD,EAAMF,QzBiClB,sByB9B1BE,EAAMF,QACL,oCACGb,EAASqI,2BACV,kBAAC/F,EAAA,EAAD,CAAQtE,MAAM,SAASuE,QAASvC,EAASyI,iBAAzC,czB2BuB,sByBpB1B1H,EAAMF,QAAgC,kBAAC,GAAD,Q,MCG9B8H,OAlCf,WACE,IAAM7J,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAC/B4D,EAAW4B,cAEjBtF,qBAAU,WAER2I,MACC,CAAC9J,EAAM+J,UAEV,IAAMD,EAAmB,WACvBjF,EdTK,CACLF,KZqDuB,iB0BzCnBqF,EAAa,CACjBC,KAAMjK,EAAMkK,gBAAkB,yBAEhC,OACE,yBAAKrL,UAAU,sBAEZmB,EAAMiC,MAAMF,QAAU,kBAAC,EAAD,MAGtB/B,EAAMiC,MAAMF,QACX,yBACE0B,QAASqG,EACTtF,MAAOwF,EACPnL,UAAU,8BC0DLsL,I,MADE,CAAEC,UAtDD,SAAC9L,EAAS+L,EAAUC,GAAW,IAE3CC,EAF0C,EACpBjM,EAAQC,MAAM,KAAK4G,KAAI,SAAChC,GAAD,OAAOtF,SAASsF,MADnB,mBACvCnF,EADuC,KACjCC,EADiC,KAC5BC,EAD4B,KAI9C,OAAQmM,GACN,I3B+ByB,gB2B9BvB,GAAIrM,EAAOsM,G3BhBI,G2BgBY,OAAO,KAClCC,EAAO,UAAMvM,EAAOsM,EAAb,YAAsBrM,EAAtB,YAA6BC,GACpC,MACF,I3B4BwB,e2B3BtB,GAAID,EAAMqM,G3BnBI,E2BmBW,OAAO,KAChCC,EAAO,UAAMvM,EAAN,YAAcC,EAAMqM,EAApB,YAA6BpM,GACpC,MACF,I3ByByB,gB2BxBvB,GAAIA,EAAOoM,G3BbI,G2BaY,OAAO,KAClCC,EAAO,UAAMvM,EAAN,YAAcC,EAAd,YAAqBC,EAAOoM,GAGvC,OAAOC,GAoCqBC,WAjCX,SAAClM,EAAS+L,EAAUC,GAAW,IAE5CC,EAF2C,EACrBjM,EAAQC,MAAM,KAAK4G,KAAI,SAAChC,GAAD,OAAOtF,SAASsF,MADlB,mBACxCnF,EADwC,KAClCC,EADkC,KAC7BC,EAD6B,KAI/C,OAAQmM,GACN,I3BUyB,gB2BTvB,GAAIrM,EAAOsM,EAAQ,EAAG,OAAO,KAC7BC,EAAO,UAAMvM,EAAOsM,EAAb,YAAsBrM,EAAtB,YAA6BC,GACpC,MACF,I3BOwB,e2BNtB,GAAID,EAAMqM,EAAQ,EAAG,OAAO,KAC5BC,EAAO,UAAMvM,EAAN,YAAcC,EAAMqM,EAApB,YAA6BpM,GACpC,MACF,I3BIyB,gB2BHvB,GAAIA,EAAOoM,EAAQ,EAAG,OAAO,KAC7BC,EAAO,UAAMvM,EAAN,YAAcC,EAAd,YAAqBC,EAAOoM,GAGvC,OAAOC,GAeiCE,WAXvB,SAACJ,GAClB,OAAQA,GACN,I3BTyB,gB2BUvB,O3BxDe,G2ByDjB,I3BVwB,e2BWtB,O3BzDc,E2B0DhB,I3BXyB,gB2BYvB,O3BjDe,O4BwGNK,GAnHa,SAAC7F,EAAU7E,EAAOiB,EAAO8E,GACnD,IAAMhI,EAAUiC,EAAMxC,KAChBmN,EAAc7M,EAAkBC,GAChC6M,EnB8BCC,OAAOC,KAAKvN,GmB0EnB,MAAO,CACLwN,eAtGqB,WACrB,IAAIC,E5BIa,G4BHbV,EAAQ,EA2BZ,MAzBgB,CAAC,QAAS,UAAUnF,KAAI,SAACR,GACvC,IAAIsG,EACJ,OAAQtG,GACN,IAAK,QAEH,IADAsG,EAAad,GAASC,UAAUO,E5BkCb,gB4BlCyCL,GACrDM,EAAcvK,SAAS4K,KAC5BA,EAAad,GAASC,UAAUO,E5BgCf,gB4BhC2CL,GAC5DA,IAEgB,MADhBU,KAIF,OADAV,EAAQ,EACDW,EACT,IAAK,SAEH,IADAA,EAAad,GAASK,WAAWG,E5BwBd,gB4BxB0CL,GACtDM,EAAcvK,SAAS4K,KAC5BA,EAAad,GAASK,WAAWG,E5BsBhB,gB4BtB4CL,GAC7DA,IAEgB,MADhBU,KAIF,OADAV,EAAQ,EACDW,OA6EbC,oBAvE0B,SAACb,GAC3B,IAAIW,EAAUb,GAASM,WAAWJ,GAC9BC,EAAQ,EA2BZ,MAzBgB,CAAC,SAAU,SAASnF,KAAI,SAACR,GACvC,IAAIsG,EACJ,OAAQtG,GACN,IAAK,QAEH,IADAsG,EAAad,GAASC,UAAUO,EAAaN,EAAUC,GAChDM,EAAcvK,SAAS4K,KAC5BA,EAAad,GAASC,UAAUO,EAAaN,EAAUC,GACvDA,IAEgB,MADhBU,KAIF,OADAV,EAAQ,EACDW,EACT,IAAK,SAEH,IADAA,EAAad,GAASK,WAAWG,EAAaN,EAAUC,GACjDM,EAAcvK,SAAS4K,KAC5BA,EAAad,GAASK,WAAWG,EAAaN,EAAUC,GACxDA,IAEgB,MADhBU,KAIF,OADAV,EAAQ,EACDW,OA8CbE,uBAnC6B,SAAChI,GAC9B,IAAM3F,EAAOyD,EAAMmK,mBACnBjI,EAAEC,iBACF,IAAM3F,EAAcuC,EAAMiC,MAAME,eAAe1E,YACzCC,EAASsC,EAAMiC,MAAME,eAAezE,OAEtC2N,EAAQ/E,EAAM,CAAE9I,OAAMC,cAAaC,WAEvCmE,EAAYwJ,GAAO,SAAC1D,EAASC,GAC3B,GAAIA,EAAK,OAAO/G,QAAQoB,MAAM2F,EAAI7F,QAC7BlB,QAAQC,IAAI6G,EAAQvF,KAEzByC,EAAS+B,EAAUxJ,EAAQ,KAE3ByH,EhB5GG,CACLF,KZqDuB,oB4B4EvB2G,kBAlBwB,SAACC,GACzB,OAAOA,EAAYpG,KAAI,SAAC8F,GACtB,GAAKA,EACL,OACE,kBAAC1C,EAAA,EAAD,CACE9E,QAAS,kBA3BW+H,EA2BcP,OA1BxClF,GAAS,SAAC9E,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBmK,mBAAoBI,OAD5B,IAACA,GA4BpB9K,IAAG,UAAKuK,EAAL,gBAEF5M,EAAe4M,U,SCjEXQ,GAjDgB,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,YACxBG,EAAyCH,EAAzCG,UAAWC,EAA8BJ,EAA9BI,WAAYC,EAAkBL,EAAlBK,cADmB,EAIxB3L,mBAAS,CACjCoI,cAAc,EACd+C,mBAAoB,KAN4B,mBAI3CnK,EAJ2C,KAIpC8E,EAJoC,KAU5C/F,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAC/B4D,EAAW4B,cAGXvF,EAAWwJ,GAAoB7F,EAAU7E,EAAOiB,EAAO8E,GAM7D,OACE,6BAASlH,UAAU,0BACjB,kBAACgN,GAAA,EAAD,CAAU7C,OAAQ/H,EAAMoH,aAAcY,OAN3B,WACblD,GAAS,SAAC9E,GAAD,mBAAC,eAAgBA,GAAjB,IAAwBoH,cAAepH,EAAMoH,oBAMlD,kBAACa,EAAA,EAAD,CAAgBC,OAAK,GAClBlI,EAAMmK,mBACH/M,EAAe4C,EAAMmK,oB7BeE,6B6BZ7B,kBAAChC,EAAA,EAAD,KACE,kBAACb,EAAA,EAAD,CAAcuD,QAAM,GAApB,wBACC5K,EAASoK,kBAAkBI,GAC5B,kBAACnD,EAAA,EAAD,CAAcC,SAAO,IAErB,kBAACD,EAAA,EAAD,CAAcuD,QAAM,GAApB,yBACC5K,EAASoK,kBAAkBK,GAC5B,kBAACpD,EAAA,EAAD,CAAcC,SAAO,IAErB,kBAACD,EAAA,EAAD,CAAcuD,QAAM,GAApB,mBACC5K,EAASoK,kBAAkBM,KAIhC,kBAACpI,EAAA,EAAD,CAAQtE,MAAM,UAAUuE,QAASvC,EAASiK,wB7BPtB,Y8BNXY,GA7BK,WAAM,MAEU9L,mBAAS,IAFnB,mBAEjByL,EAFiB,KAENM,EAFM,OAGY/L,mBAAS,IAHrB,mBAGjB0L,EAHiB,KAGLM,EAHK,OAIkBhM,mBAAS,IAJ3B,mBAIjB2L,EAJiB,KAIFM,EAJE,KAKlBX,EAAc,CAAEG,YAAWC,aAAYC,iBAGvC/G,EAAW4B,cACXzG,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAWwJ,GAAoB7F,EAAU7E,GAQ/C,OANAmB,qBAAU,WACR6K,EAAa9K,EAASgK,oB9B8CG,kB8B7CzBe,EAAc/K,EAASgK,oB9B4CC,iB8B3CxBgB,EAAiBhL,EAASgK,oB9B0CD,oB8BzCxB,IAGD,6BACE,gEAEA,kBAAC,GAAD,CAAwBK,YAAaA,MCJ5BY,I,MA7BK,SAACtH,EAAU7E,GAC7B,IAAMoM,EAAmB,SAACC,GAEpBrM,EAAM9C,YAAcmP,GACxBxH,ECRK,CACLF,KhCIwB,egCHxBzC,QDMuBmK,KAsBzB,MAAO,CAAED,mBAAkBE,eAfJ,WACrB,OAAOpP,EAAUiI,KAAI,SAACkH,GACpB,IAAIE,EAAUvM,EAAM+J,UAAYsC,GAAQ,oBACxC,OACE,wBACE3L,IAAG,UAAK2L,EAAL,WACHxN,UAAS,sBAAiB0N,GAC1B9I,QAAS,kBAAM2I,EAAiBC,KAE/BA,OAMkCG,oBAnBf,WAC1B3H,EEZK,CACLF,KjCK2B,wBkCchB8H,GAfQ,WAErB,IAAM5H,EAAW4B,cACXzG,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAWiL,GAAYtH,EAAU7E,GAEvC,OACE,yBAAKnB,UAAU,iBACb,wBAAIA,UAAU,oBAAoBqC,EAASoL,oBCiBlCI,GAzBH,WAEV,IAAM1M,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAC/B4D,EAAW4B,cAEXvF,EAAWiL,GAAYtH,GAE7B,OACE,6BACE,yBAAKhG,UAAU,eACb,4BACE4E,QAASvC,EAASsL,oBAClB3N,UAAU,mBAEV,yBAAKA,UAAU,yBAEjB,yBAAKA,UAAU,6BAAf,yBAGDmB,EAAMkK,gBAAkB,kBAAC,GAAD,QC2BhByC,GA1CQ,WAAM,MAEa1M,oBAAS,GAFtB,mBAEpBoI,EAFoB,KAENuE,EAFM,KAKrB5M,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAC/B4D,EAAW4B,cAIXoG,EAAqB,SAAC1J,GAC1B,IAAM2J,EAAiB3J,EAAEiD,OAAO2G,UAC5BD,IAAmB9M,EAAMtC,QAC7BmH,EAAS+B,EAAUkG,KAGfE,EAAc5P,EAAQ+H,KAAI,SAACzH,EAAQ0H,GACvC,OAAU,IAANA,OAAS,EAGT,kBAACmD,EAAA,EAAD,CACE7H,IAAG,UAAKhD,EAAL,YAAe0H,EAAf,eACH3B,QAASoJ,GAERnP,MAMHuP,EAAejN,EAAMtC,SAAWN,EAAQ,GAAK,SAAW4C,EAAMtC,OAEpE,OACE,iCACE,kBAACmO,GAAA,EAAD,CAAU7C,OAAQX,EAAcY,OA1BrB,kBAAM2D,GAAgB,SAACM,GAAD,OAAgBA,OA2B/C,kBAAChE,EAAA,EAAD,CAAgBC,OAAK,GAAE8D,GACvB,kBAAC7D,EAAA,EAAD,KAAe4D,MCMRG,GA5Ca,SAACtI,EAAU7E,GAAU,MAEPC,oBAAS,GAFF,mBAExCoI,EAFwC,KAE1BuE,EAF0B,KAKzC3D,EAAS,kBAAM2D,GAAgB,SAACM,GAAD,OAAgBA,MAE/CE,EAAmB,SAACjK,GACxBA,EAAEgD,UACFtB,EAAS+B,EAAUzD,EAAEiD,OAAO2B,aA6B9B,MAAO,CACLqF,mBACAC,kBA5BwB,WACxB,IAAMC,EAAalQ,EAAQ+H,KAAI,SAACzH,EAAQ0H,GACtC,OAAU,IAANA,OAAS,EAGT,kBAACmD,EAAA,EAAD,CACE7H,IAAG,UAAKhD,EAAL,YAAe0H,EAAf,eACH3B,QAAS2J,GAER1P,MAOH6P,EAAUvN,EAAMtC,SAAWN,EAAQ,GAAK,UAAY4C,EAAMtC,OAEhE,OACE,kBAACmO,GAAA,EAAD,CAAU7C,OAAQX,EAAcY,OAAQA,GACtC,kBAACC,EAAA,EAAD,CAAgBC,OAAK,GAAEoE,GACvB,kBAACnE,EAAA,EAAD,KAAekE,OCnBRE,I,MAlBK,WAElB,IAAM3I,EAAW4B,cACXzG,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAWiM,GAAoBtI,EAAU7E,GAE/C,OACE,6BACE,yBAAKnB,UAAU,mCACb,yCACCqC,EAASmM,wBCqBHI,GAlCe,SAAC,GAAkB,IAAhBvM,EAAe,EAAfA,SAC/B,OACE,yBAAKrC,UAAU,+BACXqC,EAASwM,UACT,kBAAClK,EAAA,EAAD,CACEC,QAASvC,EAASyM,qBAClBzO,MAAM,UACNL,UAAU,wBvCsCI,QuChCjBqC,EAASwM,UACR,oCACE,kBAAClK,EAAA,EAAD,CACEtE,MAAM,UACNuE,QAASvC,EAAS0M,eAClB/O,UAAU,wBAHZ,W,UCpBGgP,GAAc,SAACC,GAC1B,MAAO,CACLnJ,KxCMyB,gBwCLzBzC,QAAS4L,ICoFEC,GA/EmB,SAACC,GAAoB,IAC7CrK,EAA8BqK,EAA9BrK,WACAxE,GAD8B6O,EAAlBpK,cACKD,EAAjBxE,cAGF8O,EAAiB,SAACC,EAAKC,GAC3B,IAAMC,EAAQF,EAAI,GACZG,EAAMH,EAAIA,EAAII,OAAS,GAM7B,MAAO,CAACF,EAAOC,GAAKlJ,KAAI,SAACjH,EAAMkH,GAAP,OACtB,wBAAI1E,IAAG,UAAKxC,EAAOkH,EAAZ,eAA4BjH,EAAgBD,QA4DvD,MAAO,CACLqQ,WAzDiB,WACjB,OAAOpR,EAAUgI,KAAI,SAAClH,EAAKkQ,GAEzB,IAAMK,EAAYL,EAAQ,IAAM,EAAI,cAAgB,cAG9CM,EAActP,EAAagP,GACjC,OAAIM,EAEyB,IAAvBA,EAAYH,OAEZ,wBACE5N,IAAG,UAAKzC,EAAL,YAAYkQ,EAAZ,OACH1K,QAASuK,EAAeL,qBACxB9O,UAAW2P,GAEX,4BAAKvQ,GACL,iCACA,kCA8Cd,SAA+BiQ,GAC7B,IAAMQ,EAAYR,EAAIS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAEnCC,EAAkB,GACpBC,EAAa,CAACL,EAAU,IACxBM,EAAUN,EAAU,GAmBxB,OAjBAA,EAAUO,SAAQ,SAACC,EAAK9J,GACZ,IAANA,IAGA8J,EAAM,IAAMF,EAASD,EAAWtO,KAAKyO,IAGvCJ,EAAgBrO,KAAKsO,IACrBA,EAAa,IACFtO,KAAKyO,IAElBF,EAAUE,EAGN9J,IAAM8I,EAAII,OAAS,GAAGQ,EAAgBrO,KAAKsO,OAG1CD,EAjEeK,CAAsBV,GAEvBtJ,KAAI,SAACiK,EAAUhK,GAC5B,OAAU,IAANA,EAGA,wBAAI1E,IAAG,UAAKzC,EAAL,eAAemH,EAAf,YAA4BvG,UAAW2P,GAC5C,4BAAKvQ,GACJgQ,EAAemB,IAMpB,wBAAI1O,IAAG,UAAKzC,EAAL,eAAemH,EAAf,YAA4BvG,UAAW2P,GAC5C,6BACCP,EAAemB,OAQtB,wBAAI1O,IAAG,UAAKzC,EAAL,YAAYkQ,EAAZ,OAAwBtP,UAAW2P,GACxC,4BAAKvQ,GACL,iCACA,wC,uDCbKoR,GA1DE,SAAC,GAAkC,IAAhCnO,EAA+B,EAA/BA,SAAUhD,EAAqB,EAArBA,KAAMoR,EAAe,EAAfA,SAAe,EAEnBrP,oBAAS,GAFU,mBAE1C2I,EAF0C,KAEjC2G,EAFiC,KAKjDpO,qBAAU,WACR,IAAKD,EAASyC,WAAWxE,aAAamQ,GAAW,OAAOC,GAAW,GAE/DrO,EAASyC,WAAWxE,aAAamQ,GAAUjP,SAASnC,GACtDqR,GAAW,GACRA,GAAW,KACf,CAACrO,EAASyC,WAAWxE,aAAamQ,KAkCrC,OACE,kBAACE,GAAA,EAAD,CAAW3Q,UAAU,gCACnB,kBAAC4Q,GAAA,EAAD,CACEnK,SA5Be,WAEnBpE,EAAS0C,eAAc,SAAC3C,GAAW,IACzB9B,EAAiB8B,EAAjB9B,aACJuQ,EAAcvQ,EACdwQ,EAAaxQ,EAAamQ,GAAb,aACTnQ,EAAamQ,IACjB,GAcJ,OAXIK,EAAWtP,SAASnC,IACtB2C,QAAQC,IAAI,qBAAsB6O,GAClCA,EAnBkB,SAACzB,EAAK0B,GAC5B,IAAIC,EAAS3B,EACPtQ,EAAQsQ,EAAI4B,QAAQF,GAE1B,OADKhS,GAAOiS,EAAOE,OAAOnS,EAAO,GAC1BiS,EAeUG,CAAgBL,EAAYzR,KAIzC2C,QAAQC,IAAI,0BACZ6O,EAAWlP,KAAKvC,IAGlBwR,EAAYJ,GAAYK,EACjB,2BAAK1O,GAAZ,IAAmB9B,aAAcuQ,QAQ/BrK,MAAOnH,EACPyG,KAAK,WACLiE,QAASA,IAEX,kBAACqH,GAAA,EAAD,exCZoB,SAAC/R,GACzB,IAAME,EAAQP,SAASK,GACvB,OAAc,IAAVE,EAAoB,OACV,KAAVA,EAAqB,OACrBA,EAAQ,GAAU,GAAN,OAAUA,EAAV,MACX,UAAUA,EAAQ,GAAlB,MwCOU8R,CAAWhS,OCRbiS,GAxCU,SAAC,GAAkB,IAAhBjP,EAAe,EAAfA,SAiBpBkP,EAAUjT,EAAUgI,KAAI,SAAClH,EAAKmH,GAClC,OACE,yBAAK1E,IAAG,UAAKzC,EAAL,uBACN,4BAAKA,GACL,yBAAKY,UAAU,2CApBE,SAACyQ,GAEtB,IADA,IAAMe,EAAY,GACTnS,EAAO,EAAGA,E3CyBF,G2CzBgBA,IAC/BmS,EAAU5P,KACR,kBAAC,GAAD,CACEC,IAAG,UAAK4O,EAAL,YAAiBpR,EAAjB,aACHA,KAAMA,EACNgD,SAAUA,EACVoO,SAAUA,KAIhB,OAAOe,EASAC,CAAelL,QAMxB,OACE,yBAAKvG,UAAU,+BACb,wBAAIA,UAAU,eACZ,0BAAMA,UAAU,uCAAhB,4BAIF,kBAAC0R,GAAA,EAAD,KAAOH,KCNEI,GA7BW,SAAC,GAAwB,IAAtBxC,EAAqB,EAArBA,eAErBhO,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAW6M,GAA0BC,GAErCyC,EAAczQ,EAAM0N,UAAY,QAEtC,OACE,yBAAK7O,UAAS,uCAAkC4R,IAC7CzQ,EAAM0N,UAAY,kBAAC,GAAD,CAAkBxM,SAAU8M,KAE7ChO,EAAM0N,UACN,2BAAO7O,UAAU,4BACf,+BACE,wBAAIA,UAAU,qCACZ,6BACA,0CACA,0CAGJ,+BAAQqC,EAASqN,iBCqBZmC,I,MAjDQ,SAAC7L,EAAU7E,GAAU,MAENC,mBAAS,CAC3ChB,KAAM,GACNC,MAAO,GACPC,aAAc,CACZC,EAAG,MANmC,mBAEnCuE,EAFmC,KAEvBC,EAFuB,OASJ3D,mBAAS,MATL,mBASnC0Q,EATmC,KAStBC,EATsB,KAUlClD,EAAa1N,EAAb0N,SA6BR,MAAO,CACLA,WACA/J,aACAC,gBACA+J,qBA1B2B,SAACxK,GAC5BA,GAAKA,EAAEC,iBAEFuN,GAKH/M,EAAc+M,GAEdC,EAAe,OALfA,EAAejN,GAOjBkB,EAASgJ,IAAaH,KAetBmD,kBAhCwB,SAAC1N,GACzBA,EAAEgD,UACFvC,GAAc,SAAC3C,GAAD,mBAAC,eAAgBA,GAAjB,IAAwB/B,MAAOiE,EAAEiD,OAAOf,YA+BtDuI,eAbqB,SAACzK,GACtBA,EAAEC,iBxC5B0B,SAAC0N,EAAWhR,GAC1C,IAAMiR,EAAKD,EAAU7R,KACrBF,EAAQgS,GAAMD,EAEdhR,EAASf,EAAQgS,IwCyBfC,CAAiBrN,GAAY,WAC3BkB,EAASgJ,IAAY,WCyBZoD,GArDI,WAEjB,IAAMpM,EAAW4B,cACXzG,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAWwP,GAAe7L,EAAU7E,GAS1C,OANAmB,qBAAU,WACRtB,EAAcG,EAAMtC,QAAQ,SAACkD,GAC3BM,EAAS0C,cAAchD,QAExB,CAACZ,EAAMtC,SAGR,6BACGwD,EAASyC,YACR,yBAAK9E,UAAU,yBAEb,0BAAMA,UAAU,gCAAhB,QACA,8BAAOqC,EAASyC,WAAW1E,MAC3B,0BAAMJ,UAAU,gCAAhB,SAGCqC,EAASwM,SACR,2BACEnI,UAAWrE,EAASwM,SACpBrI,MAAOnE,EAASyC,WAAWzE,MAC3ByF,KAAK,QACLW,SAAUpE,EAAS2P,kBACnBhS,UAAU,0CAGZ,yBACE2F,MAAO,CAAEH,WAAYnD,EAASyC,WAAWzE,OACzCL,UAAU,4BAKd,0BAAMA,UAAU,gCAAhB,gBACA,+BACA,kBAAC,GAAD,CAAmBmP,eAAgB9M,IAGnC,kBAAC,GAAD,CAAuBA,SAAUA,O,SCyB5BgQ,GARF,CACXC,UARgB,SAACC,EAAMC,GACvB,OAAOD,EAAKjM,KAAI,SAAChC,EAAGiC,GAClB,IAAMkM,EAAYzG,OAAO/F,OAAOuM,EAAKjM,IACrC,MAAM,CAAEjC,GAAR,oBAAcmO,QAMhBC,cArEoB,WAEpB,IADA,IAAMC,EAAS,GACNxT,EAAO,EAAGA,E/CkBA,G+ClBcA,IAC/B,IAAK,IAAIC,EAAM,EAAGA,E/CkBF,E+ClBcA,IAC5BuT,EAAO/Q,KAAP,UAAezC,EAAf,YAAuBC,IAG3B,OAAOuT,GA+DPC,wBAlD8B,SAACC,EAAQhU,GACvC,IAAMiU,EAVoB,WAC1B,IADgC,EAC1BC,EAAM,GADoB,eAERvU,GAFQ,IAEhC,2BAAsC,CACpCuU,EADoC,SACjB,GAHW,8BAKhC,OAAOA,EAKUC,GAWjB,OAVAH,EAAOzC,SAAQ,SAACzR,GACd,IAAK,IAAIU,EAAO,EAAGA,E/CQF,G+CRgBA,IAAQ,CACvC,IAAM4T,EAAE,UAAMtU,EAAN,YAAcU,GAChBqE,EAAehF,EAAQuU,GACzBvP,GAAgBA,EAAa7E,SAAWA,IAC1CiU,EAASpP,EAAa9E,aACpBkU,EAASpP,EAAa9E,aAAe,OAItCkU,GAuCPI,iBAnCuB,SAACL,EAAQM,GAChC,IAAMR,EAAS,GACXS,EAAkB,GAQtB,OAPAP,EAAOzC,SAAQ,SAACzR,EAAM4H,GACpB6M,EAAgBxR,KAAKjD,GACjByU,EAAgB3D,SAAW0D,IAC7BR,EAAO/Q,KAAKwR,GACZA,EAAkB,OAGfT,GA0BPU,wBArB8B,SAAC9C,GAC/B,IAAMhB,EAAQgB,EAAS,GACjBf,EAAMe,EAASA,EAASd,OAAS,GACjC6D,EAAS3T,EAAsB4P,GAC/BgE,EAAO5T,EAAsB6P,GACnC,MAAM,GAAN,OAAU8D,EAAV,cAAsBC,KCzBlBC,GAA0B,SAACC,GAC/B,IAD2C,EACrCC,EAAS,GAD4B,eAEnBlV,GAFmB,IAE3C,2BAAsC,CAAC,IAA9BI,EAA6B,QACpC8U,EAAO9R,KAAK,wBAAIC,IAAKjD,GAAc6U,EAAQ7U,MAHF,8BAK3C,OAAO8U,GAiCMC,GAFA,CAAEC,cA9DK,SAACC,EAAOjP,GAC5B,OAAOiP,EAAMvN,KAAI,SAACwN,EAAMvN,GACtB,OACE,kBAACmD,EAAA,EAAD,CAAc7H,IAAG,UAAKiS,EAAL,YAAavN,EAAb,aAA2B3B,QAASA,GAAWA,GAC7DkP,OA0DuBC,aAnDX,SAACH,GACpB,OAAO,kBAACrJ,EAAA,EAAD,KAAeqJ,IAkDsBI,aA7CzB,WACnB,IAEMC,EAFW,CAAI,cAAJ,oBAAqBzV,IAEV8H,KAAI,SAAC1H,EAAa2H,GAAd,OAC9B,wBAAI1E,IAAG,UAAKjD,EAAL,YAAoB2H,EAApB,YAAiC3H,MAE1C,OAAO,4BAAKqV,IAuC8CC,UA3B1C,SAACC,EAASC,GAC1B,IADwC,EAClCC,EAAM,GACRC,EAAY,GACZvV,EAAQ,EAH4B,eAIpBoV,GAJoB,IAIxC,2BAA6B,CAAC,IAArBV,EAAoB,QAErB9D,EAAY5Q,EAAQ,IAAM,EAAI,cAAgB,cAE9CwV,EAAeH,EAAUrV,GAC/BuV,EAAU1S,KACR,wBAAIC,IAAG,UAAK0S,EAAL,YAAqBxV,EAArB,OAAiCyV,MAAM,OAC3CD,IAGLD,EAAU1S,KAAK4R,GAAwBC,IACvCY,EAAIzS,KACF,wBAAIC,IAAG,UAAK9C,EAAL,YAAcwV,EAAd,YAAsCvU,UAAW2P,GACrD2E,IAGLvV,IACAuV,EAAY,IArB0B,8BAuBxC,OAAOD,I,UCYMI,GAvEa,SAACtT,GAAU,MAGHC,mBAAS,UAHN,mBAG9BsT,EAH8B,KAGnBC,EAHmB,OAKHvT,oBAAS,GALN,mBAK9B+I,EAL8B,KAKtB4D,EALsB,KAQ/B6G,EAAUvC,GAAKK,gBAEfnC,EAAW8B,GAAKa,iBAAiB0B,EAASF,GAE1CG,EAAStE,EAASjK,KAAI,SAACwO,GAAD,OAC1BzC,GAAKO,wBAAwBkC,EAAO3T,EAAMtC,WAGtCkW,EAAwBxE,EAASjK,KAAI,SAACwO,GAAD,OACzCzC,GAAKgB,wBAAwByB,MAIzBE,EAAa3C,GAAKC,UAAUyC,EAAuBF,GA0CzD,MAAO,CACLH,YACAO,cAvBoB,WAIpB,MAAO,CAAEhB,QAHI,CAAI,cAAJ,oBAAqBzV,IAGhBuD,KAFLiT,IAsBbE,qBApC2B,WAC3B,IAAMrB,EANCF,GAAOC,cAAcnV,GAAY,SAAC6F,GAAD,OACtCqQ,EAAa3V,SAASsF,EAAEiD,OAAO2G,eAMjC,OACE,kBAAClB,GAAA,EAAD,CAAU7C,OAAQA,EAAQC,OAAQ,kBAAM2D,GAAiB5D,KACvD,kBAACE,EAAA,EAAD,CAAgBC,OAAK,GAAEoK,GACtBf,GAAOI,aAAaF,KAgCzBsB,kBAhBwB,WACxB,OACE,kBAACC,GAAA,EAAD,CAAOpV,UAAU,gCACf,2BAAOA,UAAU,8BACd2T,GAAOK,gBAEV,+BAAQL,GAAOO,UAAUW,EAAQE,Q,iBCX1BM,GA7CK,WAElB,IAAMlU,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAG/BC,EAAWoS,GAAoBtT,GALb,EAQEkB,EAAS4S,gBAA3BlT,EARgB,EAQhBA,KAAMkS,EARU,EAQVA,QACRqB,EAAQ,UAAMnU,EAAMtC,OAAZ,wBAEd,OACE,iCACE,yBAAKmB,UAAU,+BACb,0CACA,kBAAC,GAAD,MACA,4CACA,6BAAMqC,EAAS6S,wBAEd/T,EAAMtC,SAAWN,EAAQ,IAA6B,WAAvB8D,EAASqS,WACvC,kBAAC,WAAD,CACE1U,UAAU,0BACVuH,OAAO,SACPgO,SAAUD,EACVvT,KAAMA,EACNkS,QAASA,GALX,oBAYJ,yBAAKjU,UAAU,8BACZmB,EAAMtC,SAAWN,EAAQ,IAA6B,WAAvB8D,EAASqS,UACvCrS,EAAS8S,oBAET,0BAAMnV,UAAU,uCAAhB,+CCvBKwV,GAnBK,WAElB,IAAMrU,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAC/BqT,EAAkBtU,EAAMkK,gBAAkB,cAEhD,OACE,yBAAKrL,UAAS,sBAAiByV,IAC7B,kBAAC,GAAD,MACCtU,EAAMtC,SAAWN,EAAQ,GACxB,kBAAC,GAAD,MAEA,0BAAMyB,UAAU,uCAAhB,2CCAO0V,GAbM,WAEnB,IACMD,EADQtT,aAAY,SAACC,GAAD,OAAWA,KACPiJ,gBAAkB,cAEhD,OACE,yBAAKrL,UAAS,sBAAiByV,IAC7B,kBAAC,EAAD,MACA,kBAAC,EAAD,QCKSE,GAbI,WAEjB,IACMF,EADQtT,aAAY,SAACC,GAAD,OAAWA,KACPiJ,gBAAkB,cAEhD,OACE,yBAAKrL,UAAS,sBAAiByV,IAE7B,kBAAC,GAAD,QCsBSG,OAnBf,WAEE,IAAMzU,EAAQgB,aAAY,SAACC,GAAD,OAAWA,KAErC,OACE,yBAAKpC,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MtDNsB,iBsDQrBmB,EAAM+J,SAA4B,kBAAC,GAAD,MtDNZ,kBsDOtB/J,EAAM+J,SAA6B,kBAAC,GAAD,MtDNf,gBsDOpB/J,EAAM+J,SAA2B,kBAAC,GAAD,QCbzB2K,I,YAXK,WAAmC,IAAlCzT,EAAiC,uDAFjC,EAEsB0T,EAAW,uCACpD,OAAQA,EAAOhQ,MACb,IvDLqB,YuDMnB,OAAO1D,EAAQ0T,EAAOzS,QACxB,IvDNqB,YuDOnB,OAAOjB,EAAQ0T,EAAOzS,QACxB,QACE,OAAOjB,KCTP2T,GAAe,CACnB5W,KAAM,EACNC,IAAK,EACLC,KAAM,GA2BO2W,GAxBK,WAAmC,IAAlC5T,EAAiC,uDAAzB2T,GAAcD,EAAW,uCACpD,OAAQA,EAAOhQ,MACb,IxDPqB,YwDQnB,OAAO,2BACF1D,GADL,IAEEjD,KAAMiD,EAAMjD,KAAO,IAEvB,IxDXqB,YwDYnB,OAAO,2BACFiD,GADL,IAEEjD,KAAMiD,EAAMjD,KAAO,IAEvB,IxDfuB,cwDevB,MACwB2W,EAAOzS,QAArBjE,EADV,EACUA,IAAKC,EADf,EACeA,KACb,OAAO,2BACF+C,GADL,IAEEhD,MACAC,SAEJ,QACE,OAAO+C,IC1BP2T,GAAexX,EAAQ,GAWd0X,GATO,WAAmC,IAAlC7T,EAAiC,uDAAzB2T,GAAcD,EAAW,uCACtD,OAAQA,EAAOhQ,MACb,IzDAsB,ayDCpB,OAAOgQ,EAAOzS,QAChB,QACE,OAAOjB,ICIE8T,GAXU,WAA4B,IAA3B9T,EAA0B,wDAAX0T,EAAW,uCAClD,OAAQA,EAAOhQ,MACb,I1DqBqB,Y0DpBnB,OAAO,EACT,I1DoBsB,a0DnBpB,OAAO,EACT,QACE,OAAO1D,ICPP2T,GAAe,CACnB7S,OAAQ,KACRG,QAAS,MAeI8S,GAZM,WAAmC,IAAlC/T,EAAiC,uDAAzB2T,GAAcD,EAAW,uCAErD,OAAQA,EAAOhQ,MACb,I3DHqB,Y2DInB,OAAOgQ,EAAOzS,QAChB,I3DoDuB,c2DnDrB,OAAO0S,GACT,QACE,OAAO3T,ICGEgU,GATQ,WAAmC,IAAlChU,EAAiC,uD5DY9B,c4DZmB0T,EAAW,uCACvD,OAAQA,EAAOhQ,MACb,I5DHwB,e4DItB,OAAOgQ,EAAOzS,QAChB,QACE,OAAOjB,ICHEiU,GATQ,WAA4B,IAA3BjU,EAA0B,wDAAX0T,EAAW,uCAChD,OAAQA,EAAOhQ,MACb,I7DK2B,kB6DJzB,OAAQ1D,EACV,QACE,OAAOA,ICOEkU,GATS,WAAgC,IAA/BlU,EAA8B,wDAAX0T,EAAW,uCACrD,OAAQA,EAAOhQ,MACb,I9DGyB,gB8DFvB,OAAOgQ,EAAOzS,QAChB,QACE,OAAOjB,ICFP4E,GAAY,CAChB/B,mBAAmB,EACnBC,yBAAyB,EACzBqR,cAAc,GAoBDC,GAjBiB,WAAgC,IAA/BpU,EAA8B,uDAAtB4E,GAAW8O,EAAW,uCAC7D,OAAQA,EAAOhQ,MACb,I/DLmC,0B+DMjC,OAAO,2BAAK1D,GAAZ,IAAmB6C,kBAAmB6Q,EAAOzS,UAC/C,I/DNyC,gC+DOvC,OAAO,2BAAKjB,GAAZ,IAAmB8C,wBAAyB4Q,EAAOzS,UACrD,I/DP6B,oB+DQ3B,OAAO,2BAAKjB,GAAZ,IAAmBmU,aAAcT,EAAOzS,UAC1C,I/DPyB,gB+DQvB,OAAO2D,GACT,I/DViC,wB+DW/B,OAAO,2BAAK5E,GAAZ,kBAAoB0T,EAAOzM,SAAWjH,EAAM0T,EAAOzM,WACrD,QACE,OAAOjH,I,SCJEqU,GAZKC,aAAgB,CAClCC,KAAMd,GACNlX,KAAMqX,GACNnX,OAAQoX,GACRW,UAAWV,GACX9S,MAAO+S,GACPjL,QAASkL,GACT/K,eAAgBgL,GAChBxH,SAAUyH,GACVtR,YAAawR,KCPTrV,GAAQ0V,aACZJ,GACAK,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASrD,OACP,kBAAC,IAAMsD,WAAP,KACE,kBAAC,IAAD,CAAU9V,MAAOA,IACf,kBAAC,GAAD,QAGJ+V,SAASC,eAAe,W","file":"static/js/main.434bc415.chunk.js","sourcesContent":["/** Redux actions **/\nexport const INCREMENT = \"INCREMENT\";\nexport const DECREMENT = \"DECREMENT\";\nexport const NEXT_WEEK = \"NEXT_WEEK\";\nexport const PREV_WEEK = \"PREV_WEEK\";\nexport const UPDATE_DATE = \"UPDATE_DATE\";\nexport const SET_DRIVER = \"SET_DRIVER\";\nexport const SET_ERROR = \"SET_ERROR\";\nexport const SET_APP_VIEW = \"SET_APP_VIEW\";\nexport const TOGGLE_SLIDE_IN = \"TOGGLE_SLIDE_IN\";\nexport const SET_EDIT_MODE = \"SET_EDIT_MODE\";\nexport const SET_SHOW_BOOKABLE_SLOTS = \"SET_SHOW_BOOKABLE_SLOTS\";\nexport const SET_SHOW_OUTSIDE_AVAILABILITY = \"SET_SHOW_OUTSIDE_AVAILABILITY\";\nexport const SET_SHOW_CONTROLS = \"SET_SHOW_CONTROLS\";\nexport const TOGGLE_FILTER_ELEMENT = \"TOGGLE_FILTER_ELEMENT\";\nexport const RESET_FILTERS = \"RESET_FILTERS\";\n\n/** App Views **/\nexport const DRIVERS_VIEW = \"DRIVERS_VIEW\";\nexport const TASKS_VIEW = \"TASKS_VIEW\";\nexport const SCHEDULE_VIEW = \"SCHEDULE_VIEW\";\nexport const REPORT_VIEW = \"REPORT_VIEW\";\nexport const APP_VIEWS = [DRIVERS_VIEW, SCHEDULE_VIEW, REPORT_VIEW];\n\n// => entry form modal toggle\nexport const OPEN_FORM = \"OPEN_FORM\";\nexport const CLOSE_FORM = \"CLOSE_FORM\";\n\n/** Calendar constants **/\nexport const WEEKS = 52;\nexport const DAYS = 7;\nexport const DAY_WORDS = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n];\nexport const HOURS = 24;\n\n/** Data required for entries */\n// => important: index 0 needs to be 'All' for ControllersHandlers.js\n// STRETCH: Using as temp data source to add/delete users\nexport const DRIVERS = [\"All\", \"Anna\", \"Bob\", \"Chris\"];\nexport const DESCRIPTIONS = [\"DROP OFF\", \"PICK UP\", \"MISC\"];\n\n/** Button inner text **/\nexport const prevWeek_btn = \"⇦\";\nexport const nextWeek_btn = \"⇨\";\nexport const submit_btn = \"submit\";\nexport const edit_btn = \"edit\";\nexport const delete_btn = \"delete\";\nexport const cancel_btn = \"cancel\";\nexport const add_btn = \"➕\";\nexport const defaultSuggestion_btn = \"Choose available timeslot\";\n\n/** Error codes */\n// => db error codes\nexport const TIMESLOT_CONFLICT = \"TIMESLOT_CONFLICT\";\nexport const DATE_REQUIRED = \"DATE_REQUIRED\";\nexport const DRIVER_REQUIRED = \"DRIVER_REQUIRED\";\nexport const DESCRIPTION_REQUIRED = \"DESCRIPTION_REQUIRED\";\nexport const RESET_ERROR = \"RESET_ERROR\";\nexport const INVALID_ENTRY_OBJ = \"INVALID_ENTRY_OBJ\";\n\n/** Success codes **/\nexport const ENTRY_CREATE_200 = \"ENTRY_CREATE_200\";\nexport const ENTRY_UPDATE_200 = \"ENTRY_UPDATE_200\";\nexport const ENTRY_DELETE_200 = \"ENTRY_DELETE_200\";\nexport const ENTRY_OVERWRITE_200 = \"ENTRY_OVERWRITE_200\";\n\n/** Suggestions.js **/\n// constants used for helping calculate suggestions (selectors param)\nexport const WEEK_SELECTOR = \"WEEK_SELECTOR\";\nexport const DAY_SELECTOR = \"DAY_SELECTOR\";\nexport const HOUR_SELECTOR = \"HOUR_SELECTOR\";\n\n/** ReportTable.js **/\n// how days are divided for report (col 1)\nexport const DAY_RANGES = [2, 4, 7, 14, 28];\n","// entry ID format: wwddtt\n// e.g.  => 1-5-23 (1st week, Thursday, 11pm);\n\nexport const entries = {\n  \"0-3-19\": {\n    date: \"0-3-19\",\n    description: \"PICK UP\",\n    driver: \"Bob\",\n  },\n  \"0-6-12\": {\n    date: \"0-6-12\",\n    description: \"MISC\",\n    driver: \"Anna\",\n  },\n  \"0-5-8\": {\n    date: \"0-5-8\",\n    description: \"PICK UP\",\n    driver: \"Anna\",\n  },\n  \"0-4-7\": {\n    date: \"0-4-7\",\n    description: \"PICK UP\",\n    driver: \"Bob\",\n  },\n  \"0-0-0\": {\n    date: \"0-0-0\",\n    description: \"PICK UP\",\n    driver: \"Chris\",\n  },\n};\n","import { DAY_WORDS } from \"../util/constants\";\n\n/* Input: int. Output: string */\nexport const dayToWords = (index) => {\n  return DAY_WORDS[parseInt(index)];\n};\n\n/* Input: obj. Output: string */\n// converts date Obj to 'w-d-h' string\nexport const dateObjToStringID = (dateObj) => {\n  const { week, day, hour } = dateObj;\n  return `${week}-${day}-${hour}`;\n};\n\n// return hh:00 AM/PM\nexport const hourTo12hFormat = (hour) => {\n  const _hour = parseInt(hour);\n  if (_hour === 0) return \"12:00 AM\";\n  if (_hour === 12) return \"12:00 PM\";\n  if (_hour < 12) return `${_hour}:00 AM`;\n  else return `${_hour - 12}:00 PM`;\n};\n\n// convert string 'w-d-y' to human words\nexport const dateStrToWords = (dateStr) => {\n  if (!dateStr) return;\n  const [week, day, hour] = dateStr.split(\"-\");\n  return `Week ${week}: ${dayToWords(day)}, ${hourTo12hFormat(hour)}`;\n};\n\n// convert string 'w-d-y' to date Obj\nexport const dateStrToObj = (dateStr) => {\n  const [week, day, hour] = dateStr.split(\"-\");\n  return { week, day, hour };\n};\n\n// convert date obj to words\nexport const dateObjToWords = (dateObj) => {\n  return dateStrToWords(dateObjToStringID(dateObj));\n};\n\n// Inpput 'w-d' return Day x str. 4-5 => \"Day 28\"\nexport const week_day_str_to_day_x = (wwdd) => {\n  const [week, day] = wwdd.split(\"-\");\n  const dayCount = parseInt(week) * 7 + parseInt(day);\n  return `Day ${dayCount}`;\n};\n\nexport const hourAMorPM = (hour) => {\n  const _hour = parseInt(hour);\n  if (_hour === 0) return \"12am\";\n  if (_hour === 12) return \"12pm\";\n  if (_hour < 12) return `${_hour}am`;\n  else return `${_hour - 12}pm`;\n};\n\n// take availability arr and convert to human text\n// [9, 10, 11] => 9AM - 11AM\n// Numbers need to be consecutive\nexport const consecutiveArrToWords = (arr) => {\n  const start = hourTo12hFormat(arr[0]);\n  const end = hourTo12hFormat(arr[arr.length - 1]);\n  if (arr.length === 1) return `${start}`;\n  return `${start} - ${end}`;\n};\n\n// returns consecutive strings of availability\n// [9, 10, 11, 1,2,3] => [\"9AM - 11AM\", \"1PM - 3PM\"];\nexport const availabilityToWords = (arr) => {\n  const consecutiveSets = [];\n  let currentSet = [arr[0]];\n  let prevNum = arr[0];\n\n  arr.forEach((num, i) => {\n    if (i === 0) return;\n\n    // if consecutive, add to current set\n    if (num - 1 === prevNum) currentSet.push(num);\n    else {\n      // else break set and start new one\n      consecutiveSets.push(currentSet);\n      currentSet = [];\n      currentSet.push(num);\n    }\n    prevNum = num;\n\n    // if at the end of array, push remaining set\n    if (i === arr.length - 1) consecutiveSets.push(currentSet);\n  });\n\n  return consecutiveSets.map((set) => consecutiveArrToWords(set));\n};\n","import React from \"react\";\n/** Styles **/\nimport \"../Slot.css\";\n/** Helpers **/\nimport { dayToWords, hourTo12hFormat } from \"../../../util/formatHelpers\";\n\nconst ColumnRow = ({ day, hour }) => {\n  // if day -1, render hours\n  const hours = day === -1 && (\n    <div className={`small-text Slot__row-header corner${day}${hour}`}>\n      {hourTo12hFormat(hour)}\n    </div>\n  );\n\n  // if hours -1, render days\n  const days = hour === -1 && (\n    <div className={`medium-text Slot__column-header corner${day}${hour}`}>\n      {dayToWords(day)}\n    </div>\n  );\n\n  return (\n    <div\n      className={`fixed-header${hour} Slot__container wkDay${day} corner${day}${hour}`}\n    >\n      {hours && hours}\n      {days && days}\n    </div>\n  );\n};\n\nexport default ColumnRow;\n","export const drivers = {\n  Anna: {\n    name: \"Anna\",\n    color: \"#e7087f\", // css color #\n    availability: {\n      0: [9, 10, 12, 15, 16, 17],\n      2: [9, 10, 12, 15, 16, 17],\n      4: [9, 10, 12, 15, 16, 17],\n      6: [9, 10, 12, 15, 16, 17],\n    },\n  },\n  Bob: {\n    name: \"Bob\",\n    color: \"#101cc1\",\n    availability: {\n      // Sun, Mon, Wed, 10am-3pm\n      0: [10, 12, 13, 14, 15],\n      1: [10, 12, 13, 14, 15],\n      3: [10, 12, 13, 14, 15],\n    },\n  },\n  Chris: {\n    name: \"Chris\",\n    color: \"#0eec67\",\n    availability: {\n      1: [6, 7, 8, 9, 16, 17, 18, 19, 20, 21],\n      2: [6, 7, 8, 9, 16, 17, 18, 19, 20, 21],\n      3: [6, 7, 8, 9, 16, 17, 18, 19, 20, 21],\n      5: [6, 7, 8, 9, 16, 17, 18, 19, 20, 21],\n      6: [6, 7, 8, 9, 16, 17, 18, 19, 20, 21],\n    },\n  },\n};\n","import { drivers } from \"../db/drivers\";\n\n// CREATE\n\n// READ\nexport const getDriverData = (driver, callback) => {\n  // console.log(\"Fetching data for\", driver);\n  return callback(drivers[driver]);\n};\n\n// UPDATE\nexport const updateDriverData = (driverObj, callback) => {\n  const ID = driverObj.name;\n  drivers[ID] = driverObj;\n\n  callback(drivers[ID]);\n};\n\n// DELETE\n","import React, { useState } from \"react\";\n/** Subcomponents **/\nimport { Slot } from \"../../components\";\nimport ColumnRow from \"../../components/Slot/SlotView/ColumnRow\";\n/** Constants **/\nimport { DAYS, HOURS } from \"../../util/constants\";\n/** Helpers **/\nimport { getDriverData } from \"../../util/driverDbHelpers\";\n\nconst TimetableHandlers = (store) => {\n  /** State **/\n  const [driverAvailability, setDriverAvailability] = useState(null);\n\n  // get availability for current driver\n  const handleGetDriverAvailability = () => {\n    getDriverData(store.driver, (data) => {\n      if (!data) return setDriverAvailability(null);\n      console.log(\"Driver availability\", data.availability);\n      setDriverAvailability(data.availability);\n    });\n  };\n\n  const isWithinAvailability = (day, hour) => {\n    if (!driverAvailability) return false;\n\n    // if this day is a day within availability and this day accomodates that hour...\n    if (driverAvailability[day] && driverAvailability[day].includes(hour))\n      return true;\n    else return false;\n  };\n\n  // return list of JSX Slot components\n  const renderSlots = () => {\n    // console.log(\"Generating slots...\");\n    const slots = [];\n    for (let day = -1; day < DAYS; day++) {\n      for (let hour = -1; hour < HOURS; hour++) {\n        // pass bool if slot is within current driver availability\n        const bookableDay = isWithinAvailability(day, hour);\n\n        if (day === -1 || hour === -1)\n          slots.push(\n            <ColumnRow key={`${day}-${hour}-slots`} day={day} hour={hour} />\n          );\n        else\n          slots.push(\n            <Slot\n              bookableDay={bookableDay}\n              key={`${day}-${hour}-slots`}\n              day={day}\n              hour={hour}\n            />\n          );\n      }\n    }\n    return slots;\n  };\n\n  return {\n    renderSlots,\n    handleGetDriverAvailability,\n  };\n};\n\nexport default TimetableHandlers;\n","import React, { useEffect, useState } from \"react\";\n/** Styles **/\nimport \"./Timetable.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n/** Handlers **/\nimport TimetableHandlers from \"./TimetableHandlers\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n\nconst Timetable = () => {\n  /** Redux **/\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = TimetableHandlers(store);\n\n  useEffect(() => {\n    handlers.handleGetDriverAvailability();\n  }, [store.driver]);\n\n  return (\n    <div>\n      {/* render slots */}\n      <div className=\"Timetable__slots-container\">\n        {handlers.renderSlots(store.driver)}\n      </div>\n    </div>\n  );\n};\n\nexport default Timetable;\n\n/* Component notes: [VIEW]\n * This component is dealing with view render logic only */\n","/** DB **/\nimport { entries } from \"../db/entries\";\n/** Helpers **/\nimport { getDriverEntries } from \"../util/dbHelpers\";\n/** Constants **/\nimport { DRIVERS } from \"../util/constants\";\nconst ALL = DRIVERS[0];\n\nconst entryValidationHelpers = (currentDriver) => {\n  // if no driver param is provided, use full db\n  const filteredDB =\n    currentDriver && currentDriver !== ALL\n      ? getDriverEntries(currentDriver)\n      : entries;\n\n  // check if entry already exists - return entry\n  const isBooked = (dateID) => {\n    return filteredDB[dateID];\n  };\n\n  return {\n    isBooked,\n  };\n};\n\nexport default entryValidationHelpers;\n\n// Note: validating if entry exists in DB, entry validation is done in Entry.js schema\n// Todo: change file name to be more descriptive\n","/** DB **/\nimport { entries } from \"../db/entries\";\n/** Constants **/\nimport {\n  TIMESLOT_CONFLICT,\n  DATE_REQUIRED,\n  DRIVER_REQUIRED,\n  DESCRIPTION_REQUIRED,\n  ENTRY_CREATE_200,\n  ENTRY_UPDATE_200,\n} from \"../util/constants\";\n/** Helpers **/\nimport entryValidation from \"../util/entryValidationHelpers\";\nconst validate = entryValidation();\n\n// ==> CREATE\n\nexport const createEntry = (entryObj, callback) => {\n  console.log(\"Creating entry...\");\n  const { date, description, driver } = entryObj;\n\n  /** BEGIN: validation **/\n  // check if empty fields\n  if (!date) return callback(null, { errMsg: DATE_REQUIRED });\n  if (!driver) return callback(null, { errMsg: DRIVER_REQUIRED });\n  if (!description) return callback(null, { errMsg: DESCRIPTION_REQUIRED });\n\n  // check to see if taken\n  const bookedSlot = validate.isBooked(date);\n  if (bookedSlot) {\n    console.error(TIMESLOT_CONFLICT, bookedSlot);\n    return callback(null, {\n      errMsg: TIMESLOT_CONFLICT,\n      payload: bookedSlot,\n      bookingAttempt: entryObj,\n    });\n  }\n  /** END: validation **/\n\n  // update db\n  entries[date] = entryObj;\n\n  // after successful entry\n  callback({ msg: ENTRY_CREATE_200, data: entryObj });\n};\n\n// ==> READ\n\n// return obj with driver schedule\nexport const getDriverEntries = (currentDriver) => {\n  const filteredByDriver = {};\n  for (let entryID in entries) {\n    const currentEntry = entries[entryID];\n    if (currentEntry.driver === currentDriver) {\n      filteredByDriver[entryID] = currentEntry;\n    }\n  }\n  return filteredByDriver;\n};\n\n// return obj with arrays of occupied dates\nexport const getOccupiedSlots = () => {\n  return Object.keys(entries);\n};\n\n// ==> UPDATE\n\nexport const editEntry = (entryObj, callback) => {\n  console.log(\"Editing entry...\");\n  const { date, description, driver } = entryObj;\n\n  // update db\n  entries[date] = entryObj;\n\n  // after successful entry\n  callback({ msg: ENTRY_UPDATE_200, data: entryObj });\n};\n\n// ==> DELETE\n\nexport const deleteEntry = (date, callback) => {\n  console.log(\"Deleting entry...\");\n  // delete form db\n  delete entries[date];\n  // clear booked data for this slot\n  callback(null);\n};\n","import React, { useState, useEffect } from \"react\";\n/** Reactstrap */\nimport { Button } from \"reactstrap\";\n/** Helpers **/\nimport { deleteEntry } from \"../../../util/dbHelpers\";\n/** Constants **/\nimport {\n  ENTRY_DELETE_200,\n  edit_btn,\n  delete_btn,\n  cancel_btn,\n  add_btn,\n} from \"../../../util/constants\";\n/** Styles **/\nimport \"./SlotControllers.css\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n/** npm **/\nimport classNames from \"classnames\";\n\nconst SlotControllers = (props) => {\n  const { setFormOpen, formOpen, bookedData, setBookedData, isVisible } = props;\n\n  /** State **/\n  const [deleteConfirm, setDeleteConfirm] = useState(false);\n\n  /** Redux **/\n  const store = useSelector((state) => state);\n\n  // When week changes, reset delete confirm\n  useEffect(() => setDeleteConfirm(false), [store.date.week]);\n\n  const handleFormToggle = (e) => {\n    e && e.preventDefault();\n    setFormOpen((state) => !state);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    deleteEntry(bookedData.date, () => {\n      console.log(ENTRY_DELETE_200);\n      // clear booked data\n      setBookedData(null);\n      // close confirmation\n      toggleDeleteConfirmation();\n    });\n  };\n\n  const toggleDeleteConfirmation = (e) => {\n    e && e.preventDefault();\n    // close entry form\n    setFormOpen(false);\n    setDeleteConfirm(!deleteConfirm);\n  };\n\n  const controlsVisibility = classNames(\"SlotControllers__btn-container\", {\n    isVisible,\n  });\n\n  return (\n    <div>\n      {/* add new booking btn */}\n      {!formOpen && !bookedData && (\n        <Button\n          className={`show-btn-on-hover ${controlsVisibility}`}\n          onClick={handleFormToggle}\n        >\n          {add_btn}\n        </Button>\n      )}\n\n      {/* edit / delete btns */}\n      {bookedData && !deleteConfirm && (\n        <div className={`SlotControllers__btn-container ${controlsVisibility}`}>\n          <Button onClick={handleFormToggle}>{edit_btn}</Button>\n          <Button color=\"danger\" onClick={toggleDeleteConfirmation}>\n            {delete_btn}\n          </Button>\n        </div>\n      )}\n\n      {/* delete confirmation */}\n      {deleteConfirm && (\n        <>\n          <span className=\"SlotControllers__warning-prompt\">Are you sure?</span>\n          <div\n            className={`SlotControllers__btn-container ${controlsVisibility}`}\n          >\n            <Button color=\"danger\" onClick={handleDelete}>\n              {delete_btn}\n            </Button>\n            <Button color=\"primary\" onClick={toggleDeleteConfirmation}>\n              {cancel_btn}\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default SlotControllers;\n","import React, { useEffect, useState } from \"react\";\n/** Styles **/\nimport \"./SlotView.css\";\n/** Helpers **/\nimport { getDriverData } from \"../../../util/driverDbHelpers\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n/** npm **/\nimport classNames from \"classnames\";\n\nconst SlotView = ({ dateObj, bookedData }) => {\n  /** State **/\n  const [driverData, setDriverData] = useState(null);\n\n  /** Redux **/\n  const store = useSelector((state) => state);\n  const { showBookableSlots, showOutsideAvailability } = store.viewFilters;\n\n  useEffect(() => {\n    if (bookedData) {\n      getDriverData(bookedData.driver, (data) => {\n        setDriverData(data);\n      });\n    }\n  }, [bookedData]);\n\n  /** Notes: logic for changing color depending on driver color and also if the booking is within their schedule or not **/\n\n  // style card based on driver settings (color)\n  const driverColor_css = driverData && {\n    position: \"absolute\",\n    top: 10,\n    right: 10,\n    display: \"inline-block\",\n    background: driverData.color,\n    height: 30,\n    width: 30,\n  };\n\n  return (\n    <div>\n      {bookedData && driverData && (\n        <div className=\"SlotView__data-container\">\n          <span>Driver</span>\n          <div>\n            {bookedData.driver}\n            <div style={driverColor_css}></div>\n          </div>\n          <span>Description</span>\n          <div>{bookedData.description}</div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SlotView;\n","import { SET_ERROR, RESET_ERROR } from \"../util/constants\";\n\nexport const setError = (errObj) => {\n  return {\n    type: SET_ERROR,\n    payload: errObj,\n  };\n};\n\nexport const resetError = () => {\n  return {\n    type: RESET_ERROR,\n  };\n};\n","import React from \"react\";\n/** Constants **/\nimport {\n  DRIVERS,\n  DESCRIPTIONS,\n  SET_ERROR,\n  DRIVER_REQUIRED,\n  DESCRIPTION_REQUIRED,\n} from \"../../util/constants\";\n/** Redux **/\nimport { setError } from \"../../actions/errorActions\";\n\nconst EntryFormHandlers = (dispatch, values, handleChange) => {\n  const handleEmptyValue = (errMsg) => {\n    console.error(errMsg);\n    dispatch(setError({ errMsg, payload: null }));\n  };\n\n  const handleValidation = (successCallback) => {\n    if (!values.driver) return handleEmptyValue(DRIVER_REQUIRED);\n    if (!values.description) return handleEmptyValue(DESCRIPTION_REQUIRED);\n\n    successCallback();\n  };\n\n  // spread drivers array for rendering\n  const renderDriverDropdown = () => {\n    const options = DRIVERS.map((driver, i) => {\n      // excluse 'All' option\n      if (i === 0) return;\n      else\n        return (\n          <option\n            className=\"EntryForm__option\"\n            key={`${driver}-dropdown`}\n            value={driver}\n          >\n            {driver}\n          </option>\n        );\n    });\n\n    return (\n      <select\n        className=\"EntryForm__select\"\n        value={values.driver || \"DEFAULT\"}\n        name=\"driver\"\n        onChange={handleChange}\n      >\n        <option value=\"DEFAULT\" disabled hidden>\n          Choose driver\n        </option>\n        {options}\n      </select>\n    );\n  };\n\n  // spread descriptions array for rendering\n  const renderDescriptionDropdown = () => {\n    const options = DESCRIPTIONS.map((description) => (\n      <option\n        className=\"EntryForm__option\"\n        key={`${description}-dropdown`}\n        value={description}\n      >\n        {description}\n      </option>\n    ));\n\n    return (\n      <select\n        className=\"EntryForm__select\"\n        value={values.description || \"DEFAULT\"}\n        name=\"description\"\n        onChange={handleChange}\n      >\n        <option value=\"DEFAULT\" disabled hidden>\n          Choose description\n        </option>\n        {options}\n      </select>\n    );\n  };\n\n  return {\n    renderDriverDropdown,\n    renderDescriptionDropdown,\n    handleEmptyValue,\n    handleValidation,\n  };\n};\n\nexport default EntryFormHandlers;\n","import { useState } from \"react\";\n\nconst useForm = (initState = {}, submitCallback) => {\n  const [state, setState] = useState(initState);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    submitCallback();\n  };\n\n  const handleReset = () => {\n    const resetState = {};\n    for (let key in state) resetState[key] = \"\";\n    setState(resetState);\n  };\n\n  const handleChange = (e) => {\n    e.persist();\n    const { name, value } = e.target;\n    setState((prev) => ({ ...prev, [name]: value }));\n  };\n\n  return [state, handleChange, handleSubmit, handleReset];\n};\n\nexport default useForm;\n\n/* Custom hook notes:\n  This way of writing custom hooks can handle any input and also the submission. */\n","import {\n  INVALID_ENTRY_OBJ,\n  DATE_REQUIRED,\n  DESCRIPTION_REQUIRED,\n  DRIVER_REQUIRED,\n} from \"../../util/constants\";\n\n// validate if an entry is valid\n// NOT validating if entry exists in db\nexport const Entry = (entryObj) => {\n  // validate if no params passed\n  if (!entryObj) return console.error(INVALID_ENTRY_OBJ);\n\n  const { date, description, driver } = entryObj;\n\n  // validate if missing fields\n  if (!date || !description || !driver) return console.error(INVALID_ENTRY_OBJ);\n  if (!date) return console.error(DATE_REQUIRED);\n  if (!description) return console.error(DESCRIPTION_REQUIRED);\n  if (!driver) return console.error(DRIVER_REQUIRED);\n\n  return { date, description, driver };\n};\n","import React from \"react\";\n/** Styles **/\nimport \"./EntryForm.css\";\n/** Handlers **/\nimport EntryFormHandlers from \"./EntryFormHandlers\";\n/** Custom hooks */\nimport useForm from \"../../hooks/useFormHook\";\n/** Helpers **/\nimport { createEntry, editEntry } from \"../../util/dbHelpers\";\nimport { dateObjToStringID } from \"../../util/formatHelpers\";\n/** Reacstrap **/\nimport { Button } from \"reactstrap\";\n/** Schema **/\nimport { Entry } from \"../../db/schema/Entry\";\n/** Constants **/\nimport {\n  submit_btn,\n  DRIVER_REQUIRED,\n  DESCRIPTION_REQUIRED,\n  cancel_btn,\n} from \"../../util/constants\";\n/** Redux **/\nimport { useDispatch } from \"react-redux\";\n\nconst EntryForm = (props) => {\n  const { handleEntrySuccess, bookedData, setFormOpen, dateObj } = props;\n\n  /** State **/\n  const initState = bookedData && bookedData;\n  const [values, handleChange, handleSubmit, handleReset] = useForm(\n    initState,\n    () => {\n      // validation\n      handlers.handleValidation(() => {\n        // new submission\n        const entryObj = Entry({\n          date: dateObjToStringID(dateObj),\n          driver: values.driver,\n          description: values.description,\n        });\n\n        if (bookedData) return editEntry(entryObj, handleEntrySuccess);\n        else createEntry(entryObj, handleEntrySuccess);\n      });\n    }\n  );\n\n  /** Redux **/\n  const dispatch = useDispatch();\n\n  /** Handlers **/\n  const handlers = EntryFormHandlers(dispatch, values, handleChange);\n\n  const handleCloseForm = (e) => {\n    e.preventDefault();\n    setFormOpen(false);\n  };\n\n  return (\n    <div className=\"EntryForm__container\">\n      <Button\n        className=\"EntryForm__close-btn\"\n        onClick={handleCloseForm}\n        close\n      />\n\n      <form className=\"EntryForm__form\" onSubmit={handleSubmit}>\n        <div className=\"SlotView__data-container\">\n          {/* Driver dropdown */}\n          <span>Driver</span>\n          {handlers.renderDriverDropdown()}\n\n          {/* Description dropdown */}\n          <span>Description</span>\n          {handlers.renderDescriptionDropdown()}\n        </div>\n\n        <Button color=\"success\" type=\"submit\">\n          {submit_btn}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EntryForm;\n","import { SET_DRIVER } from \"../util/constants\";\n\nexport const setDriver = (val) => {\n  return {\n    type: SET_DRIVER,\n    payload: val,\n  };\n};\n","/** Helpers **/\nimport entryValidation from \"../../util/entryValidationHelpers\";\nimport { dateObjToStringID } from \"../../util/formatHelpers\";\n/** Redux **/\nimport { updateDate } from \"../../actions/timetableNavigation\";\n\n// param notes: dateObj is needed here to identify the current slot.\nconst SlotHandlers = (dispatch, dateObj, store) => {\n  const validation = entryValidation(store.driver);\n\n  const handleSlotClick = () => {\n    // prevent unnecessary store update\n    if (dateObjToStringID(store.date) === dateObjToStringID(dateObj)) return;\n    else dispatch(updateDate(dateObj));\n  };\n\n  const handleStyling = (callback) => {\n    // check if slot is booked\n    const dateID = dateObjToStringID(dateObj);\n    const bookedData = validation.isBooked(dateID);\n    callback(bookedData);\n  };\n\n  return {\n    handleStyling,\n    handleSlotClick,\n  };\n};\n\nexport default SlotHandlers;\n","import {\n  INCREMENT,\n  DECREMENT,\n  NEXT_WEEK,\n  PREV_WEEK,\n  UPDATE_DATE,\n} from \"../util/constants\";\n\n/* BEGIN: use increment and decrement to jump through timetable date index */\nexport const increment = (num) => {\n  return {\n    type: INCREMENT,\n    payload: num,\n  };\n};\n\nexport const decrement = (num) => {\n  return {\n    type: DECREMENT,\n    payload: num,\n  };\n};\n\n// refactor: nextWeek and prevWeek can be simplified\nexport const nextWeek = () => {\n  return {\n    type: NEXT_WEEK,\n  };\n};\n\nexport const prevWeek = () => {\n  return {\n    type: PREV_WEEK,\n  };\n};\n/* END: use increment and decrement to jump through timetable date index */\n\n/*\n *\n */\n\n/* Use to set time when booking new tasks/ selecting slot */\nexport const updateDate = (dateObj) => {\n  return {\n    type: UPDATE_DATE,\n    payload: dateObj,\n  };\n};\n","import React, { useEffect, useState } from \"react\";\n/** Subcomponents **/\nimport SlotControllers from \"./SlotControllers/SlotControllers\";\nimport SlotView from \"./SlotView/SlotView\";\nimport EntryForm from \"../EntryForm/EntryForm\";\n/** Styles **/\nimport \"./Slot.css\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setError } from \"../../actions/errorActions\";\nimport { setDriver } from \"../../actions/driverActions\";\n/** Handlers */\nimport SlotHandlers from \"./SlotHandlers\";\n/** npm **/\nimport classNames from \"classnames\";\n/** Constants **/\nimport { DRIVERS } from \"../../util/constants\";\n\nconst Slot = ({ day, hour, bookableDay }) => {\n  /** State **/\n  const [bookedData, setBookedData] = useState(null);\n  const [formOpen, setFormOpen] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n\n  /** Redux **/\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n  const { showBookableSlots, showOutsideAvailability } = store.viewFilters;\n\n  /** Variables **/\n  const dateObj = { week: store.date.week, day, hour };\n\n  /** Hanlders **/\n  const handlers = SlotHandlers(dispatch, dateObj, store);\n\n  useEffect(() => {\n    // highlight if slot is booked\n    handlers.handleStyling((bookedData) => setBookedData(bookedData));\n\n    return () => {\n      // when week changes, close all forms\n      setFormOpen(false);\n    };\n  }, [store.date.week, store.driver]);\n\n  // Set styling based on view filters\n  const slotStyles = classNames({\n    booked: bookedData,\n    bookableDay: showBookableSlots && bookableDay,\n    outsideAvailability: showOutsideAvailability && bookedData && !bookableDay,\n  });\n\n  const handleEntrySuccess = (success, err) => {\n    // handle error\n    if (err) return handleEntryErr(err);\n    console.log(success.msg);\n    // trigger view change\n    setBookedData(success.data);\n    // close form\n    setFormOpen(false);\n    // switch current driver to created driver, unless in \"All\" view\n    if (store.driver === DRIVERS[0]) return;\n    else dispatch(setDriver(success.data.driver));\n  };\n\n  const handleEntryErr = (errObj) => {\n    // update redux error obj\n    dispatch(setError(errObj));\n  };\n\n  return (\n    <div\n      onMouseEnter={() => setIsVisible(true)}\n      onMouseLeave={() => setIsVisible(false)}\n      onClick={handlers.handleSlotClick}\n      className={`Slot__container wkDay${day} ${slotStyles}`}\n    >\n      {!formOpen && <SlotView dateObj={dateObj} bookedData={bookedData} />}\n\n      {!formOpen && (\n        <SlotControllers\n          isVisible={isVisible}\n          setFormOpen={setFormOpen}\n          formOpen={formOpen}\n          bookedData={bookedData}\n          setBookedData={setBookedData}\n        />\n      )}\n\n      {formOpen && (\n        <EntryForm\n          dateObj={dateObj}\n          setFormOpen={setFormOpen}\n          bookedData={bookedData}\n          handleEntrySuccess={handleEntrySuccess}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Slot;\n","import React from \"react\";\n/** Redux **/\nimport { nextWeek, prevWeek } from \"../../actions/timetableNavigation\";\nimport { setDriver } from \"../../actions/driverActions\";\nimport { toggleFilter } from \"../../actions/timetableFilterActions\";\n/** Constants **/\nimport {\n  DRIVERS,\n  prevWeek_btn,\n  nextWeek_btn,\n  WEEKS,\n} from \"../../util/constants\";\n/** Reacstrap **/\nimport { DropdownItem } from \"reactstrap\";\n/** Constants **/\nimport {\n  SET_SHOW_BOOKABLE_SLOTS,\n  SET_SHOW_OUTSIDE_AVAILABILITY,\n} from \"../../util/constants\";\n\nconst ControllersHandlers = (setState, dispatch, store) => {\n  const { showBookableSlots, showOutsideAvailability } = store.viewFilters;\n\n  // update redux - decrease/increase week num\n  const toggleWeek = (e) => {\n    e.preventDefault();\n\n    switch (e.target.innerHTML) {\n      case prevWeek_btn:\n        // validate - no below week 0\n        if (store.date.week <= 0) return;\n        return dispatch(prevWeek());\n      case nextWeek_btn:\n        // validate - now above week 51\n        if (store.date.week >= WEEKS - 1) return;\n        return dispatch(nextWeek());\n    }\n  };\n\n  // update state - open/close dropdown\n  const toggleDropdown = () => {\n    setState((state) => ({ ...state, dropdownOpen: !state.dropdownOpen }));\n  };\n\n  const handleCheckbox = (e) => {\n    dispatch(toggleFilter(e.target.name));\n  };\n\n  // update redux - current driver\n  const toggleDriver = (e) => {\n    const driver = e.target.innerHTML;\n\n    dispatch(setDriver(driver));\n  };\n\n  // spread dropdown items for rendering\n  const renderDropdownItems = () => {\n    return DRIVERS.map((driver, i) => {\n      if (i === 0)\n        return (\n          <div key={`${driver}-app`}>\n            <DropdownItem onClick={toggleDriver}>{driver}</DropdownItem>\n            <DropdownItem divider />\n          </div>\n        );\n\n      return (\n        <DropdownItem key={`${driver}-${i}`} onClick={toggleDriver}>\n          {driver}\n        </DropdownItem>\n      );\n    });\n  };\n\n  // spread week nav buttons for rendering\n  const renderWeekNavBtns = () => {\n    const btns = [prevWeek_btn, nextWeek_btn];\n    return btns.map((btn) => (\n      <button\n        className={`Controllers__week-nav-btn ${btn}`}\n        key={`${btn}-nav`}\n        onClick={toggleWeek}\n      >\n        {btn}\n      </button>\n    ));\n  };\n\n  // driver filter controls\n  const renderFilterCheckboxes = (driver) => {\n    return (\n      <div className=\"Controllers__filter-checkboxes-container\">\n        {driver !== DRIVERS[0] && (\n          <>\n            <input\n              type=\"checkbox\"\n              checked={showBookableSlots}\n              onChange={handleCheckbox}\n              name=\"showBookableSlots\"\n            />\n            <label htmlFor=\"showBookableSlots\">\n              Show timeslots within driver availability\n            </label>\n          </>\n        )}\n\n        <input\n          type=\"checkbox\"\n          checked={showOutsideAvailability}\n          onChange={handleCheckbox}\n          name=\"showOutsideAvailability\"\n        />\n        <label htmlFor=\"showOutsideAvailability\">\n          Show bookings outside driver availability\n        </label>\n      </div>\n    );\n  };\n\n  return {\n    toggleDropdown,\n    renderDropdownItems,\n    renderWeekNavBtns,\n    renderFilterCheckboxes,\n  };\n};\n\nexport default ControllersHandlers;\n","import { RESET_FILTERS, TOGGLE_FILTER_ELEMENT } from \"../util/constants\";\n\nexport const updateViewFilter = (action, bool) => {\n  return {\n    type: action,\n    payload: bool,\n  };\n};\n\nexport const toggleFilter = (element) => {\n  return {\n    type: TOGGLE_FILTER_ELEMENT,\n    element,\n  };\n};\n\nexport const resetFilters = () => {\n  return {\n    type: RESET_FILTERS,\n  };\n};\n","import React, { useState } from \"react\";\n/** Styles **/\nimport \"./Controllers.css\";\n/** Redux */\nimport { useDispatch, useSelector } from \"react-redux\";\n/** Reacstrap **/\nimport { ButtonDropdown, DropdownToggle, DropdownMenu } from \"reactstrap\";\n/** Handlers **/\nimport ControllersHandlers from \"./ControllersHandlers\";\n/** Constants **/\nimport { DRIVERS } from \"../../util/constants\";\n\nconst Controllers = () => {\n  /** State **/\n  const [state, setState] = useState({\n    dropdownOpen: false,\n  });\n\n  /** Redux **/\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = ControllersHandlers(setState, dispatch, store);\n\n  return (\n    <div className=\"Controllers__container\">\n      {/* driver selection dropdown */}\n      <div>\n        <div className=\"Controllers__button-dropdown\">\n          <span className=\"small-text\">View Driver</span>\n          <ButtonDropdown\n            isOpen={state.dropdownOpen}\n            toggle={handlers.toggleDropdown}\n          >\n            <DropdownToggle caret>{store.driver}</DropdownToggle>\n            <DropdownMenu>\n              {/* driver options */}\n              {handlers.renderDropdownItems()}\n            </DropdownMenu>\n          </ButtonDropdown>\n        </div>\n      </div>\n\n      {/* week navigation */}\n      <div>\n        <div className=\"Controllers__week-nav-container\">\n          {handlers.renderWeekNavBtns()}\n          <span className=\"Controllers__week-span medium-text\">\n            Week {store.date.week}\n          </span>\n        </div>\n      </div>\n\n      {/* driver filter controls */}\n      {/* only show outside of \"All\" view */}\n      <div>{handlers.renderFilterCheckboxes(store.driver)}</div>\n    </div>\n  );\n};\n\nexport default Controllers;\n\n/* Component notes: [CONTROLLERS]\n * This component is contains all of the buttons to navigate the app */\n","import React from \"react\";\n/** Helpers **/\nimport { dayToWords, dateObjToWords } from \"../../util/formatHelpers\";\nimport { editEntry } from \"../../util/dbHelpers\";\n/** Redux **/\nimport { resetError } from \"../../actions/errorActions\";\nimport { setDriver } from \"../../actions/driverActions\";\n/** Reacstrap **/\nimport { Button } from \"reactstrap\";\n/** Schema **/\nimport { Entry } from \"../../db/schema/Entry\";\n/** Constants **/\nimport { DRIVERS, ENTRY_OVERWRITE_200 } from \"../../util/constants\";\n\nconst ErrorPromptHandlers = (dispatch, error) => {\n  // close error prompt\n  const handleDismiss = () => {\n    dispatch(resetError());\n  };\n\n  // OVERWRITE BUTTON HANDLER\n  const handleOverwrite = () => {\n    // refactor #5 - simplify\n    const entryObj = Entry(error.bookingAttempt);\n\n    // update db\n    editEntry(entryObj, () => {\n      console.log(ENTRY_OVERWRITE_200);\n      // trigger view update\n      dispatch(setDriver(DRIVERS[0]));\n      // close error\n      handleDismiss();\n    });\n  };\n\n  // return JSX displaying booking conflict\n  const renderConflictingBooking = () => {\n    const booking = error.payload;\n    const { date, description, driver } = booking;\n    const [week, day, hour] = date.split(\"-\");\n    const dateObj = { week, day, hour };\n    return (\n      <div className=\"ErrorPrompt__conflict-msg-container\">\n        <span className=\"span-emphasis\">{dateObjToWords(dateObj)}</span>\n        <span>{` timeslot is booked by `}</span>\n        <span className=\"span-emphasis\">{driver.toUpperCase()}</span>\n        <span>{` for `}</span>\n        <span className=\"span-emphasis\">{description}</span>\n      </div>\n    );\n  };\n\n  return {\n    renderConflictingBooking,\n    handleDismiss,\n    handleOverwrite,\n  };\n};\n\nexport default ErrorPromptHandlers;\n","import React from \"react\";\n/** Styles **/\nimport \"./ErrorPrompt.css\";\n/** Reactstrap **/\nimport { Button } from \"reactstrap\";\n/** Redux **/\nimport { useDispatch, useSelector } from \"react-redux\";\n/** Handlers **/\nimport ErrorPromptHandlers from \"./ErrorPromptHandlers\";\nimport { TIMESLOT_CONFLICT } from \"../../util/constants\";\nimport { Suggestions } from \"../\";\n\nconst ErrorPrompt = () => {\n  /** Redux **/\n  const dispatch = useDispatch();\n  const error = useSelector((state) => state.error);\n\n  /** Handlers */\n  const handlers = ErrorPromptHandlers(dispatch, error);\n\n  return (\n    <div className=\"ErrorPrompt__container\">\n      <Button\n        className=\"ErrorPrompt__dismiss-btn\"\n        close\n        onClick={handlers.handleDismiss}\n      />\n      <span className=\"ErrorPrompt__header\">{error.errMsg}</span>\n\n      {/* display error on timesplot conflict */}\n      {error.errMsg === TIMESLOT_CONFLICT && (\n        <>\n          {handlers.renderConflictingBooking()}\n          <Button color=\"danger\" onClick={handlers.handleOverwrite}>\n            overwrite\n          </Button>\n        </>\n      )}\n\n      {/* display other time slots suggestions */}\n      {error.errMsg === TIMESLOT_CONFLICT && <Suggestions />}\n    </div>\n  );\n};\n\nexport default ErrorPrompt;\n","import React, { useEffect } from \"react\";\n/** Subcomponents **/\nimport ErrorPrompt from \"../ErrorPrompt/ErrorPrompt\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { resetError } from \"../../actions/errorActions\";\n/** Styles **/\nimport \"./AppView.css\";\n\nfunction AppView() {\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // close any error prompts whenever view changes\n    handleCloseError();\n  }, [store.appView]);\n\n  const handleCloseError = () => {\n    dispatch(resetError());\n  };\n\n  // move position of background depending on slider\n  const errorStyle = {\n    left: store.slideInToggled && \"var(--slide-in-width)\",\n  };\n  return (\n    <div className=\"AppView__container\">\n      {/* Prompt displaying input errors */}\n      {store.error.errMsg && <ErrorPrompt />}\n\n      {/* Area around error prompt */}\n      {store.error.errMsg && (\n        <div\n          onClick={handleCloseError}\n          style={errorStyle}\n          className=\"App__error-dismiss-area\"\n        ></div>\n      )}\n    </div>\n  );\n}\n\nexport default AppView;\n","/** Constants **/\nimport {\n  WEEK_SELECTOR,\n  DAY_SELECTOR,\n  HOUR_SELECTOR,\n  WEEKS,\n  DAYS,\n  HOURS,\n  DRIVERS,\n} from \"../util/constants\";\n\nconst isLeapYear = (yyyy) => {\n  const year = parseInt(yyyy);\n  if (year % 4 !== 0) return false;\n  if (year % 100 === 0) {\n    if (year % 400 === 0) return true;\n    else return false;\n  }\n  // if all validation pass, it is leap year\n  return true;\n};\n\n// returns max days in a month\nconst daysInMonth = (mm, yyyy) => {\n  const month = parseInt(mm);\n  const year = parseInt(yyyy);\n  const monthsWith31d = [1, 3, 5, 7, 8, 10, 12];\n  const monthsWith30d = [4, 6, 9, 11];\n  const monthsWith28d = [2];\n\n  if (monthsWith28d.includes(month)) {\n    return isLeapYear(year) ? 29 : 28;\n  } else if (monthsWith31d.includes(month)) {\n    return 31;\n  } else if (monthsWith30d.includes(month)) {\n    return 30;\n  }\n};\n\nconst aheadDate = (dateStr, selector, delta) => {\n  const [week, day, hour] = dateStr.split(\"-\").map((e) => parseInt(e));\n  let newDate;\n\n  switch (selector) {\n    case WEEK_SELECTOR:\n      if (week + delta >= WEEKS) return null;\n      newDate = `${week + delta}-${day}-${hour}`;\n      break;\n    case DAY_SELECTOR:\n      if (day + delta >= DAYS) return null;\n      newDate = `${week}-${day + delta}-${hour}`;\n      break;\n    case HOUR_SELECTOR:\n      if (hour + delta >= HOURS) return null;\n      newDate = `${week}-${day}-${hour + delta}`;\n      break;\n  }\n  return newDate;\n};\n\nconst behindDate = (dateStr, selector, delta) => {\n  const [week, day, hour] = dateStr.split(\"-\").map((e) => parseInt(e));\n  let newDate;\n\n  switch (selector) {\n    case WEEK_SELECTOR:\n      if (week - delta < 0) return null;\n      newDate = `${week - delta}-${day}-${hour}`;\n      break;\n    case DAY_SELECTOR:\n      if (day - delta < 0) return null;\n      newDate = `${week}-${day - delta}-${hour}`;\n      break;\n    case HOUR_SELECTOR:\n      if (hour - delta < 0) return null;\n      newDate = `${week}-${day}-${hour - delta}`;\n      break;\n  }\n  return newDate;\n};\n\n// limits max number of loops when calculating suggestion\nconst setBreaker = (selector) => {\n  switch (selector) {\n    case WEEK_SELECTOR:\n      return WEEKS;\n    case DAY_SELECTOR:\n      return DAYS;\n    case HOUR_SELECTOR:\n      return HOURS;\n  }\n};\n\nconst dateUtil = { aheadDate, behindDate, setBreaker };\nexport default dateUtil;\n","import React from \"react\";\n/** Helpers **/\nimport { getOccupiedSlots, createEntry } from \"../../util/dbHelpers\";\nimport { dateObjToStringID } from \"../../util/formatHelpers\";\nimport dateUtil from \"../../util/dateHelpers\";\n/** Constants **/\nimport {\n  WEEK_SELECTOR,\n  DAY_SELECTOR,\n  HOUR_SELECTOR,\n  WEEKS,\n  DAYS,\n  HOURS,\n  DRIVERS,\n} from \"../../util/constants\";\nimport { dateStrToWords } from \"../../util/formatHelpers\";\n/** Reactstrap **/\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n/** Redux **/\nimport { setDriver } from \"../../actions/driverActions\";\nimport { resetError } from \"../../actions/errorActions\";\n/** Schema **/\nimport { Entry } from \"../../db/schema/Entry\";\n\nconst SuggestionsHandlers = (dispatch, store, state, setState) => {\n  const dateObj = store.date;\n  const currentDate = dateObjToStringID(dateObj);\n  const occupiedSlots = getOccupiedSlots();\n\n  // suggestions within same day\n  const calcWithinHour = () => {\n    let breaker = HOURS;\n    let delta = 1;\n\n    const results = [\"ahead\", \"behind\"].map((type) => {\n      let suggestion;\n      switch (type) {\n        case \"ahead\":\n          suggestion = dateUtil.aheadDate(currentDate, HOUR_SELECTOR, delta);\n          while (occupiedSlots.includes(suggestion)) {\n            suggestion = dateUtil.aheadDate(currentDate, HOUR_SELECTOR, delta);\n            delta++;\n            breaker--;\n            if (breaker === 0) break;\n          }\n          delta = 1;\n          return suggestion;\n        case \"behind\":\n          suggestion = dateUtil.behindDate(currentDate, HOUR_SELECTOR, delta);\n          while (occupiedSlots.includes(suggestion)) {\n            suggestion = dateUtil.behindDate(currentDate, HOUR_SELECTOR, delta);\n            delta++;\n            breaker--;\n            if (breaker === 0) break;\n          }\n          delta = 1;\n          return suggestion;\n      }\n    });\n    return results;\n  };\n\n  const generateSuggestions = (selector) => {\n    let breaker = dateUtil.setBreaker(selector);\n    let delta = 1;\n\n    const results = [\"behind\", \"ahead\"].map((type) => {\n      let suggestion;\n      switch (type) {\n        case \"ahead\":\n          suggestion = dateUtil.aheadDate(currentDate, selector, delta);\n          while (occupiedSlots.includes(suggestion)) {\n            suggestion = dateUtil.aheadDate(currentDate, selector, delta);\n            delta++;\n            breaker--;\n            if (breaker === 0) break;\n          }\n          delta = 1;\n          return suggestion;\n        case \"behind\":\n          suggestion = dateUtil.behindDate(currentDate, selector, delta);\n          while (occupiedSlots.includes(suggestion)) {\n            suggestion = dateUtil.behindDate(currentDate, selector, delta);\n            delta++;\n            breaker--;\n            if (breaker === 0) break;\n          }\n          delta = 1;\n          return suggestion;\n      }\n    });\n    return results;\n  };\n\n  // updates suggestion to selected option\n  const handleSelectOption = (suggestionObj) => {\n    setState((state) => ({ ...state, selectedSuggestion: suggestionObj }));\n  };\n\n  const handleSuggestionSubmit = (e) => {\n    const date = state.selectedSuggestion;\n    e.preventDefault();\n    const description = store.error.bookingAttempt.description;\n    const driver = store.error.bookingAttempt.driver;\n\n    let entry = Entry({ date, description, driver });\n\n    createEntry(entry, (success, err) => {\n      if (err) return console.error(err.errMsg);\n      else console.log(success.msg);\n      // trigger change view\n      dispatch(setDriver(DRIVERS[0]));\n      // close error\n      dispatch(resetError());\n    });\n  };\n\n  const renderSuggestions = (suggestions) => {\n    return suggestions.map((suggestion) => {\n      if (!suggestion) return;\n      return (\n        <DropdownItem\n          onClick={() => handleSelectOption(suggestion)}\n          key={`${suggestion}-suggestion`}\n        >\n          {dateStrToWords(suggestion)}\n        </DropdownItem>\n      );\n    });\n  };\n\n  return {\n    calcWithinHour,\n    generateSuggestions,\n    handleSuggestionSubmit,\n    renderSuggestions,\n  };\n};\n\nexport default SuggestionsHandlers;\n","import React, { useState } from \"react\";\nimport { dateStrToWords } from \"../../util/formatHelpers\";\n/** Handlers **/\nimport SuggestionsHandlers from \"./SuggestionsHandlers\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Reactstrap **/\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Button,\n} from \"reactstrap\";\nimport { defaultSuggestion_btn, submit_btn } from \"../../util/constants\";\n\nconst SuggestionsControllers = ({ suggestions }) => {\n  const { withinDay, withinWeek, differentWeek } = suggestions;\n\n  /** State **/\n  const [state, setState] = useState({\n    dropdownOpen: false,\n    selectedSuggestion: \"\",\n  });\n\n  /** Redux **/\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  /** Handlers **/\n  const handlers = SuggestionsHandlers(dispatch, store, state, setState);\n\n  const toggle = () => {\n    setState((state) => ({ ...state, dropdownOpen: !state.dropdownOpen }));\n  };\n\n  return (\n    <section className=\"Suggestions__container\">\n      <Dropdown isOpen={state.dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>\n          {state.selectedSuggestion\n            ? dateStrToWords(state.selectedSuggestion)\n            : defaultSuggestion_btn}\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>Within the same day:</DropdownItem>\n          {handlers.renderSuggestions(withinDay)}\n          <DropdownItem divider />\n\n          <DropdownItem header>Within the same week;</DropdownItem>\n          {handlers.renderSuggestions(withinWeek)}\n          <DropdownItem divider />\n\n          <DropdownItem header>Different week:</DropdownItem>\n          {handlers.renderSuggestions(differentWeek)}\n        </DropdownMenu>\n      </Dropdown>\n\n      <Button color=\"primary\" onClick={handlers.handleSuggestionSubmit}>\n        {submit_btn}\n      </Button>\n    </section>\n  );\n};\n\nexport default SuggestionsControllers;\n","import React, { useEffect, useState } from \"react\";\n/** Styles **/\nimport \"./Suggestions.css\";\n/** Handlers **/\nimport SuggestionsHandlers from \"./SuggestionsHandlers\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Constants **/\nimport {\n  WEEK_SELECTOR,\n  DAY_SELECTOR,\n  HOUR_SELECTOR,\n} from \"../../util/constants\";\n/** Subcomponents **/\nimport SuggestionsControllers from \"./SuggestionsControllers\";\n\nconst Suggestions = () => {\n  /** State **/\n  const [withinDay, setWithinDay] = useState([]);\n  const [withinWeek, setWithinWeek] = useState([]);\n  const [differentWeek, setDifferentWeek] = useState([]);\n  const suggestions = { withinDay, withinWeek, differentWeek };\n\n  /** Redux **/\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = SuggestionsHandlers(dispatch, store);\n\n  useEffect(() => {\n    setWithinDay(handlers.generateSuggestions(HOUR_SELECTOR));\n    setWithinWeek(handlers.generateSuggestions(DAY_SELECTOR));\n    setDifferentWeek(handlers.generateSuggestions(WEEK_SELECTOR));\n  }, []);\n\n  return (\n    <div>\n      <p>How about these nearby timeslots?</p>\n\n      <SuggestionsControllers suggestions={suggestions} />\n    </div>\n  );\n};\n\nexport default Suggestions;\n","import React from \"react\";\n/** Redux **/\nimport { updateAppView } from \"../../actions/appViewActions\";\nimport { toggleSlideIn } from \"../../actions/slideInActions\";\n/** Constants **/\nimport { APP_VIEWS, TOGGLE_SLIDE_IN } from \"../../util/constants\";\n\nconst NavHandlers = (dispatch, store) => {\n  const handleChangeView = (view) => {\n    // prevent unnecessary update\n    if (store.APP_VIEWS === view) return;\n    dispatch(updateAppView(view));\n  };\n\n  const handleToggleSlideIn = () => {\n    dispatch(toggleSlideIn(TOGGLE_SLIDE_IN));\n  };\n\n  const renderNavItems = () => {\n    return APP_VIEWS.map((view) => {\n      let styling = store.appView === view && \"Nav__current-view\";\n      return (\n        <li\n          key={`${view}-nav-li`}\n          className={`medium-text ${styling}`}\n          onClick={() => handleChangeView(view)}\n        >\n          {view}\n        </li>\n      );\n    });\n  };\n\n  return { handleChangeView, renderNavItems, handleToggleSlideIn };\n};\n\nexport default NavHandlers;\n","import { SET_APP_VIEW } from \"../util/constants\";\n\nexport const updateAppView = (viewStr) => {\n  return {\n    type: SET_APP_VIEW,\n    payload: viewStr,\n  };\n};\n","import { TOGGLE_SLIDE_IN } from \"../util/constants\";\n\nexport const toggleSlideIn = () => {\n  return {\n    type: TOGGLE_SLIDE_IN,\n  };\n};\n","import React from \"react\";\n/** Styles **/\nimport \"./Nav.css\";\n/** Redux **/\nimport { useDispatch, useSelector } from \"react-redux\";\n/** Handlers **/\nimport NavHandlers from \"./NavHandlers\";\n\nconst NavControllers = () => {\n  /** Redux **/\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = NavHandlers(dispatch, store);\n\n  return (\n    <div className=\"Nav__slide-in\">\n      <ul className=\"Nav__slide-in-ul\">{handlers.renderNavItems()}</ul>\n    </div>\n  );\n};\n\nexport default NavControllers;\n","import React, { useState } from \"react\";\n/** Styles **/\nimport \"./Nav.css\";\n/** Subcomponents **/\nimport NavControllers from \"./NavControllers\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Handlers **/\nimport NavHandlers from \"./NavHandlers\";\n\nconst Nav = () => {\n  /** Redux **/\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n  /** Handlers **/\n  const handlers = NavHandlers(dispatch);\n\n  return (\n    <div>\n      <div className=\"Nav__navbar\">\n        <button\n          onClick={handlers.handleToggleSlideIn}\n          className=\"Nav__toggle-btn\"\n        >\n          <div className=\"Nav__toggle-btn-bar\"></div>\n        </button>\n        <div className=\"Nav__site-logo large-text\">Truck Dispatcher App</div>\n      </div>\n\n      {store.slideInToggled && <NavControllers />}\n      {/* todo: change inner text to site name (same constant as tab title) */}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { useState } from \"react\";\n/** Reactstrap **/\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n/** Constants **/\nimport { DRIVERS } from \"../../util/constants\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setDriver } from \"../../actions/driverActions\";\n\nconst DriverDropdown = () => {\n  /** State **/\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  /** Redux **/\n  const store = useSelector((state) => state);\n  const dispatch = useDispatch();\n\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  const handleUpdateDriver = (e) => {\n    const selectedDriver = e.target.innerText;\n    if (selectedDriver === store.driver) return;\n    dispatch(setDriver(selectedDriver));\n  };\n\n  const renderItems = DRIVERS.map((driver, i) => {\n    if (i === 0) return;\n    else\n      return (\n        <DropdownItem\n          key={`${driver}-${i}-ddDropdown`}\n          onClick={handleUpdateDriver}\n        >\n          {driver}\n        </DropdownItem>\n      );\n  });\n\n  // dropdown inner txt\n  const dropdown_txt = store.driver === DRIVERS[0] ? \"Select\" : store.driver;\n\n  return (\n    <section>\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>{dropdown_txt}</DropdownToggle>\n        <DropdownMenu>{renderItems}</DropdownMenu>\n      </Dropdown>\n    </section>\n  );\n};\n\nexport default DriverDropdown;\n","import React, { useState } from \"react\";\n/** Constants **/\nimport { DRIVERS } from \"../../../util/constants\";\n/** Redux **/\nimport { setDriver } from \"../../../actions/driverActions\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n\nconst DriversListHandlers = (dispatch, store) => {\n  /** State **/\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  // dropdown toggle\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n  const handleExpandInfo = (e) => {\n    e.persist();\n    dispatch(setDriver(e.target.innerHTML));\n  };\n\n  const renderDriversList = () => {\n    const drivers_li = DRIVERS.map((driver, i) => {\n      if (i === 0) return;\n      else\n        return (\n          <DropdownItem\n            key={`${driver}-${i}-driverList`}\n            onClick={handleExpandInfo}\n          >\n            {driver}\n          </DropdownItem>\n        );\n    });\n\n    // dropdown toggle inner text\n    // display name of  onlydriver, do not display \"ALL\"\n    const btn_txt = store.driver === DRIVERS[0] ? \"Drivers\" : store.driver;\n\n    return (\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>{btn_txt}</DropdownToggle>\n        <DropdownMenu>{drivers_li}</DropdownMenu>\n      </Dropdown>\n    );\n  };\n\n  return {\n    handleExpandInfo,\n    renderDriversList,\n  };\n};\n\nexport default DriversListHandlers;\n","import React from \"react\";\n/** Handlers **/\nimport DriversListHandlers from \"./DriversListHandlers\";\n/** Redux **/\nimport { useDispatch, useSelector } from \"react-redux\";\n/** Styles **/\nimport \"./DriversList.css\";\n\nconst DriversList = () => {\n  /** Redux **/\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = DriversListHandlers(dispatch, store);\n\n  return (\n    <div>\n      <div className=\"DriversList__dropdown-container\">\n        <span>Driver:</span>\n        {handlers.renderDriversList()}\n      </div>\n    </div>\n  );\n};\n\nexport default DriversList;\n","import React from \"react\";\n/** Reactstrap **/\nimport { Button } from \"reactstrap\";\n/** Constants **/\nimport { edit_btn, cancel_btn, submit_btn } from \"../../../util/constants\";\n\n// This handler is passed down from DriverHandlers.js\nconst DriverInfoControllers = ({ handlers }) => {\n  return (\n    <div className=\"DriverInfo__btns-container\">\n      {!handlers.editMode && (\n        <Button\n          onClick={handlers.handleToggleEditMode}\n          color=\"primary\"\n          className=\"DriverInfo__edit-btn\"\n        >\n          {edit_btn}\n        </Button>\n      )}\n\n      {handlers.editMode && (\n        <>\n          <Button\n            color=\"success\"\n            onClick={handlers.handleUpdateDB}\n            className=\"DriverInfo__edit-btn\"\n          >\n            done\n          </Button>\n          {/* <Button\n            onClick={handlers.handleCancel}\n            className=\"DriverInfo__edit-btn\"\n          >\n            {cancel_btn}\n          </Button> */}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default DriverInfoControllers;\n","import { SET_EDIT_MODE } from \"../util/constants\";\n\nexport const setEditMode = (bool) => {\n  return {\n    type: SET_EDIT_MODE,\n    payload: bool,\n  };\n};\n","import React from \"react\";\n/** Constants **/\nimport { DAY_WORDS } from \"../../../../util/constants\";\n/** Helpers **/\nimport { hourTo12hFormat } from \"../../../../util/formatHelpers\";\n/** Subcomponents **/\nimport TableCell from \"./TableCell\";\n\n// These props are passed down from DriverInfo.js\n// parentHandlers from DriverHandlers.js\nconst AvailabilityTableHandlers = (parentHandlers) => {\n  const { driverData, setDriverData } = parentHandlers;\n  const { availability } = driverData;\n\n  // takes [1,2,3,4] and converts to 1am 4am (start time - end time)\n  const renderStartEnd = (arr, day_i) => {\n    const start = arr[0];\n    const end = arr[arr.length - 1];\n    const driverHandlers = {\n      driverData,\n      setDriverData,\n    };\n\n    return [start, end].map((hour, i) => (\n      <th key={`${hour + i}-start-end`}>{hourTo12hFormat(hour)}</th>\n    ));\n  };\n\n  const renderRows = () => {\n    return DAY_WORDS.map((day, day_i) => {\n      // apply bg color every 2nd row\n      const css_class = day_i % 2 === 1 ? \"positive_tr\" : \"negative_tr\";\n\n      // if current day has preferences\n      const preferences = availability[day_i];\n      if (preferences) {\n        // if there are no hours, return row placeholder\n        if (preferences.length === 0)\n          return (\n            <tr\n              key={`${day}-${day_i}-tr`}\n              onClick={parentHandlers.handleToggleEditMode}\n              className={css_class}\n            >\n              <th>{day}</th>\n              <th>-</th>\n              <th>-</th>\n            </tr>\n          );\n\n        // group into consecutive days\n        const grouped = groupConsecutiveHours(preferences);\n\n        return grouped.map((grouping, i) => {\n          if (i === 0) {\n            // set up first row\n            return (\n              <tr key={`${day}day-${i}grouping`} className={css_class}>\n                <th>{day}</th>\n                {renderStartEnd(grouping, day_i)}\n              </tr>\n            );\n          }\n          // set up consecutive rows with no title\n          return (\n            <tr key={`${day}day-${i}grouping`} className={css_class}>\n              <th></th>\n              {renderStartEnd(grouping)}\n            </tr>\n          );\n        });\n      }\n\n      // if no preferences, return a row with a heeder and placeholders\n      return (\n        <tr key={`${day}-${day_i}-tr`} className={css_class}>\n          <th>{day}</th>\n          <th>-</th>\n          <th>-</th>\n        </tr>\n      );\n    });\n  };\n\n  return {\n    renderRows,\n  };\n};\n\nexport default AvailabilityTableHandlers;\n\n// return an array of arrays\nfunction groupConsecutiveHours(arr) {\n  const sortedArr = arr.sort((a, b) => a - b);\n\n  const consecutiveSets = [];\n  let currentSet = [sortedArr[0]];\n  let prevNum = sortedArr[0];\n\n  sortedArr.forEach((num, i) => {\n    if (i === 0) return;\n\n    // if consecutive, add to current set\n    if (num - 1 === prevNum) currentSet.push(num);\n    else {\n      // else break set and start new one\n      consecutiveSets.push(currentSet);\n      currentSet = [];\n      currentSet.push(num);\n    }\n    prevNum = num;\n\n    // if at the end of array, push remaining set\n    if (i === arr.length - 1) consecutiveSets.push(currentSet);\n  });\n\n  return consecutiveSets;\n}\n","import React, { useEffect, useState } from \"react\";\n/** Reactstrap */\nimport { Label, Form, FormGroup, Input } from \"reactstrap\";\n/** Helpers **/\nimport { hourAMorPM } from \"../../../../util/formatHelpers\";\n\n// handlers passed down from DriverHandlers.js\nconst Checkbox = ({ handlers, hour, dayIndex }) => {\n  /** State **/\n  const [checked, setChecked] = useState(false);\n\n  // set checked initial state\n  useEffect(() => {\n    if (!handlers.driverData.availability[dayIndex]) return setChecked(false);\n\n    if (handlers.driverData.availability[dayIndex].includes(hour))\n      setChecked(true);\n    else setChecked(false);\n  }, [handlers.driverData.availability[dayIndex]]);\n\n  const removeFromArray = (arr, elem) => {\n    let newArr = arr;\n    const index = arr.indexOf(elem);\n    if (~index) newArr.splice(index, 1);\n    return newArr;\n  };\n\n  const handleChange = () => {\n    // setChecked(!checked);\n    handlers.setDriverData((state) => {\n      const { availability } = state;\n      let newAvailObj = availability;\n      let newHourArr = availability[dayIndex]\n        ? [...availability[dayIndex]]\n        : [];\n\n      // if it exists, remove\n      if (newHourArr.includes(hour)) {\n        console.log(\"Adding to cache...\", newHourArr);\n        newHourArr = removeFromArray(newHourArr, hour);\n      }\n      // else add\n      else {\n        console.log(\"Removing from cache...\");\n        newHourArr.push(hour);\n      }\n\n      newAvailObj[dayIndex] = newHourArr;\n      return { ...state, availability: newAvailObj };\n    });\n  };\n\n  return (\n    <FormGroup className=\"EditAvailability__form-group\">\n      <Input\n        onChange={handleChange}\n        value={hour}\n        type=\"checkbox\"\n        checked={checked}\n      />\n      <Label>{`${hourAMorPM(hour)}`}</Label>\n    </FormGroup>\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\n/** Styles **/\nimport \"./EditAvailability.css\";\n/** Constants **/\nimport { DAY_WORDS, HOURS } from \"../../../../util/constants\";\n/** Reactstrap */\nimport { Label, Form, FormGroup, Input } from \"reactstrap\";\n\n/** Subcomponents **/\nimport Checkbox from \"./Checkbox\";\n\n// handlers passed down from DriverHandlers.js\nconst EditAvailability = ({ handlers }) => {\n  const renderHoursJSX = (dayIndex) => {\n    const resultJSX = [];\n    for (let hour = 0; hour < HOURS; hour++) {\n      resultJSX.push(\n        <Checkbox\n          key={`${dayIndex}-${hour}-checkbox`}\n          hour={hour}\n          handlers={handlers}\n          dayIndex={dayIndex}\n        />\n      );\n    }\n    return resultJSX;\n  };\n\n  // spread for rendering\n  const formJSX = DAY_WORDS.map((day, i) => {\n    return (\n      <div key={`${day}-options-container`}>\n        <h3>{day}</h3>\n        <div className=\"EditAvailability__select-grid-container\">\n          {renderHoursJSX(i)}\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"EditAvailability__container\">\n      <h1 className=\"medium-text\">\n        <span className=\"EditAvailability__span opacity-wave\">\n          Editing availability...\n        </span>\n      </h1>\n      <Form>{formJSX}</Form>\n    </div>\n  );\n};\n\nexport default EditAvailability;\n","import React, { useEffect } from \"react\";\n/** Handlers **/\nimport AvailabilityTableHandlers from \"./AvailabilityTableHandlers\";\n/** Styles **/\nimport \"./AvailabilityTable.css\";\n/** Subcomponents **/\nimport EditAvailability from \"./EditAvailability\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n\n// These props are passed down from DriverInfo.js\n/// parentHandlers in DriverHandlers.js\nconst AvailabilityTable = ({ parentHandlers }) => {\n  /** Redux **/\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = AvailabilityTableHandlers(parentHandlers);\n\n  const inset_class = store.editMode && \"inset\";\n\n  return (\n    <div className={`AvailabilityTable__container ${inset_class}`}>\n      {store.editMode && <EditAvailability handlers={parentHandlers} />}\n\n      {!store.editMode && (\n        <table className=\"AvailabilityTable__table\">\n          <thead>\n            <tr className=\"AvailabilityTable__column-headers\">\n              <th></th>\n              <th>Start Time</th>\n              <th>End Time</th>\n            </tr>\n          </thead>\n          <tbody>{handlers.renderRows()}</tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default AvailabilityTable;\n","import React, { useState } from \"react\";\n/** Helpers **/\nimport { updateDriverData } from \"../../../util/driverDbHelpers\";\n/** Redux **/\nimport { setEditMode } from \"../../../actions/editModeActions\";\n\nconst DriverHandlers = (dispatch, store) => {\n  /** State **/\n  const [driverData, setDriverData] = useState({\n    name: \"\",\n    color: \"\",\n    availability: {\n      0: [],\n    },\n  });\n  const [cancelCache, setCancelCache] = useState(null);\n  const { editMode } = store;\n\n  const handleColorChange = (e) => {\n    e.persist();\n    setDriverData((state) => ({ ...state, color: e.target.value }));\n  };\n\n  const handleToggleEditMode = (e) => {\n    e && e.preventDefault();\n    // set cache in the case of cancel\n    if (!cancelCache) {\n      // when user clicks edit for the first time\n      setCancelCache(driverData);\n    } else {\n      // on user cancel...\n      setDriverData(cancelCache);\n      // clear cache\n      setCancelCache(null);\n    }\n    dispatch(setEditMode(!editMode));\n  };\n\n  const handleUpdateDB = (e) => {\n    e.preventDefault();\n    updateDriverData(driverData, () => {\n      dispatch(setEditMode(false));\n    });\n  };\n\n  return {\n    editMode,\n    driverData,\n    setDriverData,\n    handleToggleEditMode,\n    handleColorChange,\n    handleUpdateDB,\n  };\n};\n\nexport default DriverHandlers;\n","import React, { useEffect } from \"react\";\n/** Helpers **/\nimport { getDriverData } from \"../../../util/driverDbHelpers\";\n/** Redux **/\nimport { useSelector, useDispatch } from \"react-redux\";\n/** Subcomponents **/\nimport DriverInfoControllers from \"./DriverInfoControllers\";\nimport AvailabilityTable from \"./AvailabilityTable/AvailabilityTable\";\n/** Styles **/\nimport \"./DriverInfo.css\";\n/** Handlers **/\nimport DriverHandlers from \"./DriverHandlers\";\n\nconst DriverInfo = () => {\n  /** Redux **/\n  const dispatch = useDispatch();\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = DriverHandlers(dispatch, store);\n\n  // get user availabilty\n  useEffect(() => {\n    getDriverData(store.driver, (data) => {\n      handlers.setDriverData(data);\n    });\n  }, [store.driver]);\n\n  return (\n    <div>\n      {handlers.driverData && (\n        <div className=\"DriverInfo__container\">\n          {/* TODO: change these spans to label */}\n          <span className=\"DriverInfo__label small-text\">Name</span>\n          <span>{handlers.driverData.name}</span>\n          <span className=\"DriverInfo__label small-text\">Color</span>\n\n          {/* Color block editor */}\n          {handlers.editMode ? (\n            <input\n              disabled={!handlers.editMode}\n              value={handlers.driverData.color}\n              type=\"color\"\n              onChange={handlers.handleColorChange}\n              className=\"DriverInfo__color-block pointer_mouse\"\n            />\n          ) : (\n            <div\n              style={{ background: handlers.driverData.color }}\n              className=\"DriverInfo__color-block\"\n            ></div>\n          )}\n\n          {/* Availability table */}\n          <span className=\"DriverInfo__label small-text\">Availability</span>\n          <span></span>\n          <AvailabilityTable parentHandlers={handlers} />\n\n          {/* Driver card buttons */}\n          <DriverInfoControllers handlers={handlers} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DriverInfo;\n","/** DB **/\nimport { entries } from \"../../../db/entries\";\n/** Helpers **/\nimport { week_day_str_to_day_x } from \"../../../util/formatHelpers\";\n/** Constants **/\nimport { DAYS, WEEKS, HOURS, DESCRIPTIONS } from \"../../../util/constants\";\nconst TOTAL_DAYS = WEEKS * DAYS; // 52 * 7\n\n// returns array with w-d keys [0-1, 0-2, ..., 52-7]\nconst weekAndDayMap = () => {\n  const result = [];\n  for (let week = 0; week < WEEKS; week++) {\n    for (let day = 0; day < DAYS; day++) {\n      result.push(`${week}-${day}`);\n    }\n  }\n  return result;\n};\n\n// return object with all the descriptions as keys, and initialize 0 count (used for counting descriptions in report). {TASK_A: 0, TASK_B: 0, ..., TASK_Z: 0}\nconst descriptionCounters = () => {\n  const obj = {};\n  for (let description of DESCRIPTIONS) {\n    obj[description] = 0;\n  }\n  return obj;\n};\n\n// Input: ['w-d1', 'w-d2', 'w-d3']. Return pick ups, drop offs, tasks in object\nconst generateReportForPeriod = (period, driver) => {\n  const counters = descriptionCounters();\n  period.forEach((date) => {\n    for (let hour = 0; hour < HOURS; hour++) {\n      const id = `${date}-${hour}`;\n      const currentEntry = entries[id];\n      if (currentEntry && currentEntry.driver === driver) {\n        counters[currentEntry.description] =\n          counters[currentEntry.description] + 1;\n      }\n    }\n  });\n  return counters;\n};\n\n// Input: timeframe int. Return array of array groupings. Timeframe of 2 days => [['w-d1','w-d2], ['w-d3', w-d4'], ... ]\nconst groupByTimeframe = (period, timeframe) => {\n  const result = [];\n  let currentGrouping = [];\n  period.forEach((date, i) => {\n    currentGrouping.push(date);\n    if (currentGrouping.length === timeframe) {\n      result.push(currentGrouping);\n      currentGrouping = [];\n    }\n  });\n  return result;\n};\n\n// depending on range, return 'Day A - Day B'\n// return array of strings\nconst generateTimeframeString = (grouping) => {\n  const start = grouping[0];\n  const end = grouping[grouping.length - 1];\n  const _start = week_day_str_to_day_x(start);\n  const _end = week_day_str_to_day_x(end);\n  return `${_start} - ${_end}`;\n};\n\n// merge rows (time frame + data)\nconst mergeRows = (arr1, arr2) => {\n  return arr1.map((e, i) => {\n    const flattened = Object.values(arr2[i]);\n    return [e, ...flattened];\n  });\n};\n\nconst util = {\n  mergeRows,\n  weekAndDayMap,\n  generateReportForPeriod,\n  groupByTimeframe,\n  generateTimeframeString,\n};\n\nexport default util;\n","import React from \"react\";\n/** Reactstrap **/\nimport {\n  Table,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n/** Constants **/\nimport { DESCRIPTIONS } from \"../../../util/constants\";\n\n/** BEGIN: Render timeframe dropdown **/\n// [constructor] returns JSX and any assigned onClick functions\nconst dropdownItems = (items, onClick) => {\n  return items.map((item, i) => {\n    return (\n      <DropdownItem key={`${item}-${i}-dayRange`} onClick={onClick && onClick}>\n        {item}\n      </DropdownItem>\n    );\n  });\n};\n\n// [constructor] returns JSX of dropdown items container\nconst dropdownMenu = (dropdownItems) => {\n  return <DropdownMenu>{dropdownItems}</DropdownMenu>;\n};\n/** END: Render timeframe dropdown **/\n\n/** BEGIN: Render table **/\nconst tableHeaders = () => {\n  const withColumn1 = [\"Time-Frame\", ...DESCRIPTIONS];\n\n  const headers = withColumn1.map((description, i) => (\n    <th key={`${description}-${i}-report`}>{description}</th>\n  ));\n  return <tr>{headers}</tr>;\n};\n\nconst extractTableDataFromObj = (dataObj) => {\n  const td_JSX = [];\n  for (let description of DESCRIPTIONS) {\n    td_JSX.push(<td key={description}>{dataObj[description]}</td>);\n  }\n  return td_JSX;\n};\n\n// Data arr will be an array of arrays with one obj containing counters for each task {PICK-UP: 5, DROP-OFF: 10, MISC: 2}\nconst tableRows = (dataArr, rowTitles) => {\n  const jsx = [];\n  let currentTr = [];\n  let index = 0;\n  for (let dataObj of dataArr) {\n    // style every 2nd row\n    const css_class = index % 2 === 0 ? \"positive_tr\" : \"negative_tr\";\n\n    const currentTitle = rowTitles[index];\n    currentTr.push(\n      <th key={`${currentTitle}-${index}-th`} scope=\"row\">\n        {currentTitle}\n      </th>\n    );\n    currentTr.push(extractTableDataFromObj(dataObj));\n    jsx.push(\n      <tr key={`${index}-${currentTitle}-tr-rows`} className={css_class}>\n        {currentTr}\n      </tr>\n    );\n    index++;\n    currentTr = [];\n  }\n  return jsx;\n};\n/** END: Render table **/\n\nconst render = { dropdownItems, dropdownMenu, tableHeaders, tableRows };\n\nexport default render;\n","import React, { useState } from \"react\";\n/** DB **/\nimport entries from \"../../../db/entries\";\nimport drivers from \"../../../db/drivers\";\n/** Helpers **/\nimport util from \"./ReportTableHelpers\";\nimport render from \"./ReportTableRenders\";\n\n/** Constants **/\nimport { DAY_RANGES, DRIVERS, DESCRIPTIONS } from \"../../../util/constants\";\n/** Reacstrap **/\nimport { Dropdown, DropdownToggle, Table } from \"reactstrap\";\n\nconst ReportTableHandlers = (store) => {\n  /** State **/\n  // how days are divided for report (col 1)\n  const [timeFrame, setTimeFrame] = useState(\"Select\");\n  // dropdown state handlers\n  const [isOpen, setDropdownOpen] = useState(false);\n\n  // every single \"week-day\" combination in order\n  const mapping = util.weekAndDayMap();\n  // range 2 => [[d1, d2], [d3, d4], [d5, d6]]\n  const grouping = util.groupByTimeframe(mapping, timeFrame);\n  // data\n  const report = grouping.map((group) =>\n    util.generateReportForPeriod(group, store.driver)\n  );\n  // header\n  const timeframeRowStringMap = grouping.map((group) =>\n    util.generateTimeframeString(group)\n  );\n\n  // cache for DL\n  const mergedRows = util.mergeRows(timeframeRowStringMap, report);\n\n  /** BEGIN: Render timeframe dropdown **/\n  const handleRenderTimeframeSelection = () => {\n    return render.dropdownItems(DAY_RANGES, (e) =>\n      setTimeFrame(parseInt(e.target.innerText))\n    );\n  };\n\n  const handleRenderDropdown = () => {\n    const items = handleRenderTimeframeSelection();\n    return (\n      <Dropdown isOpen={isOpen} toggle={() => setDropdownOpen(!isOpen)}>\n        <DropdownToggle caret>{timeFrame}</DropdownToggle>\n        {render.dropdownMenu(items)}\n      </Dropdown>\n    );\n  };\n  /** END: Render timeframe dropdown **/\n\n  /** BEGIN: CSV handlers **/\n  const cachedCSVdata = () => {\n    const headers = [\"Time-Frame\", ...DESCRIPTIONS];\n    const data = mergedRows;\n\n    return { headers, data };\n  };\n  /** END: CSV handlers **/\n\n  /** BEGIN: Render table **/\n  const handleRenderTable = () => {\n    return (\n      <Table className=\"ReportTable__table-container\">\n        <thead className=\"ReportTable__table-headers\">\n          {render.tableHeaders()}\n        </thead>\n        <tbody>{render.tableRows(report, timeframeRowStringMap)}</tbody>\n      </Table>\n    );\n  };\n  /** END: Render table **/\n\n  return {\n    timeFrame,\n    cachedCSVdata,\n    handleRenderDropdown,\n    handleRenderTable,\n  };\n};\n\nexport default ReportTableHandlers;\n","import React from \"react\";\n/** Handlers **/\nimport ReportTableHandlers from \"./ReportTableHandlers\";\n/** Subcomponents **/\nimport { DriverDropdown } from \"../../\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n/** Styles **/\nimport \"./ReportTable.css\";\n/** Constants **/\nimport { DRIVERS } from \"../../../util/constants\";\n/** npm **/\nimport { CSVLink } from \"react-csv\";\n\nconst ReportTable = () => {\n  /** Redux **/\n  const store = useSelector((state) => state);\n\n  /** Handlers **/\n  const handlers = ReportTableHandlers(store);\n\n  // CSV variables\n  const { data, headers } = handlers.cachedCSVdata();\n  const fileName = `${store.driver}_dispatch_report.csv`;\n\n  return (\n    <section>\n      <div className=\"ReportTable__btns-container\">\n        <label>Drivers</label>\n        <DriverDropdown />\n        <label>Day Range</label>\n        <div>{handlers.handleRenderDropdown()}</div>\n\n        {store.driver !== DRIVERS[0] && handlers.timeFrame !== \"Select\" && (\n          <CSVLink\n            className=\"ReportTable__csv-dl-btn\"\n            target=\"_blank\"\n            filename={fileName}\n            data={data}\n            headers={headers}\n          >\n            Download Report\n          </CSVLink>\n        )}\n      </div>\n\n      <div className=\"ReportTable__table-wrapper\">\n        {store.driver !== DRIVERS[0] && handlers.timeFrame !== \"Select\" ? (\n          handlers.handleRenderTable()\n        ) : (\n          <span className=\"ReportTable__empty-span medium-text\">\n            Make a selection to view driver reports.\n          </span>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default ReportTable;\n","import React from \"react\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n/** Subcomponents **/\nimport { DriversList, DriverInfo } from \"../components\";\n/** Constants **/\nimport { DRIVERS } from \"../util/constants\";\n\nconst DriversView = () => {\n  /** Redux **/\n  const store = useSelector((state) => state);\n  const navToggledStyle = store.slideInToggled && \"nav-toggled\";\n\n  return (\n    <div className={`view-offset ${navToggledStyle}`}>\n      <DriversList />\n      {store.driver !== DRIVERS[0] ? (\n        <DriverInfo />\n      ) : (\n        <span className=\"DriversList__empty-span medium-text\">\n          Make a selection to view driver info.\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default DriversView;\n","import React from \"react\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n/** Subcomponents **/\nimport { Controllers, Timetable } from \"../components\";\n\nconst ScheduleView = () => {\n  /** Redux **/\n  const store = useSelector((state) => state);\n  const navToggledStyle = store.slideInToggled && \"nav-toggled\";\n\n  return (\n    <div className={`view-offset ${navToggledStyle}`}>\n      <Controllers />\n      <Timetable />\n    </div>\n  );\n};\n\nexport default ScheduleView;\n","import React from \"react\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n/** Subcomponents **/\nimport { CsvExporter, ReportTable } from \"../components\";\n\nconst ReportView = () => {\n  /** Redux **/\n  const store = useSelector((state) => state);\n  const navToggledStyle = store.slideInToggled && \"nav-toggled\";\n\n  return (\n    <div className={`view-offset ${navToggledStyle}`}>\n      {/* <CsvExporter /> */}\n      <ReportTable />\n    </div>\n  );\n};\n\nexport default ReportView;\n","import React from \"react\";\n/** Styles **/\nimport \"./App.css\";\n/** Subcomponents **/\nimport { Test, AppView, Nav } from \"./components\";\n/** Views **/\nimport { DriversView, TasksView, ScheduleView, ReportView } from \"./views\";\n/** Redux **/\nimport { useSelector } from \"react-redux\";\n/** Actions **/\nimport {\n  DRIVERS_VIEW,\n  TASKS_VIEW,\n  SCHEDULE_VIEW,\n  REPORT_VIEW,\n} from \"./util/constants\";\n\nfunction App() {\n  /** Redux **/\n  const store = useSelector((state) => state);\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <AppView />\n\n      {store.appView === DRIVERS_VIEW && <DriversView />}\n      {store.appView === SCHEDULE_VIEW && <ScheduleView />}\n      {store.appView === REPORT_VIEW && <ReportView />}\n\n      {/* For dev purposes - show db, state, store, counters, etc */}\n      {/* <Test /> */}\n    </div>\n  );\n}\n\nexport default App;\n","import { INCREMENT, DECREMENT } from \"../util/constants\";\n\nconst initialState = 0;\n\nconst testReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return state + action.payload;\n    case DECREMENT:\n      return state - action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default testReducer;\n","import { NEXT_WEEK, PREV_WEEK, UPDATE_DATE } from \"../util/constants\";\n\nconst initialState = {\n  week: 0, // 1st week\n  day: 1, // Monday\n  hour: 5, // 5am\n};\n\nconst dateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NEXT_WEEK:\n      return {\n        ...state,\n        week: state.week + 1,\n      };\n    case PREV_WEEK:\n      return {\n        ...state,\n        week: state.week - 1,\n      };\n    case UPDATE_DATE:\n      const { day, hour } = action.payload;\n      return {\n        ...state,\n        day,\n        hour,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dateReducer;\n","import { SET_DRIVER, DRIVERS } from \"../util/constants\";\n\nconst initialState = DRIVERS[0];\n\nconst driverReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_DRIVER:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default driverReducer;\n","import { OPEN_FORM, CLOSE_FORM } from \"../util/constants\";\n\nconst entryFormReducer = (state = false, action) => {\n  switch (action.type) {\n    case OPEN_FORM:\n      return true;\n    case CLOSE_FORM:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default entryFormReducer;\n","import { RESET_ERROR, SET_ERROR } from \"../util/constants\";\n\nconst initialState = {\n  errMsg: null,\n  payload: null,\n};\n\nconst errorReducer = (state = initialState, action) => {\n  // todo: get some sleep and refactor this...\n  switch (action.type) {\n    case SET_ERROR:\n      return action.payload;\n    case RESET_ERROR:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import {\n  SCHEDULE_VIEW,\n  DRIVERS_VIEW,\n  REPORT_VIEW,\n  SET_APP_VIEW,\n} from \"../util/constants\";\n\nconst initialState = REPORT_VIEW;\n\nconst appViewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_APP_VIEW:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default appViewReducer;\n","import { TOGGLE_SLIDE_IN } from \"../util/constants\";\n\nconst slideInReducer = (state = false, action) => {\n  switch (action.type) {\n    case TOGGLE_SLIDE_IN:\n      return !state;\n    default:\n      return state;\n  }\n};\n\nexport default slideInReducer;\n","/** Constants **/\nimport { SET_EDIT_MODE } from \"../util/constants\";\n\nconst initState = false;\n\nconst editModeReducer = (state = initState, action) => {\n  switch (action.type) {\n    case SET_EDIT_MODE:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default editModeReducer;\n","import {\n  SET_SHOW_BOOKABLE_SLOTS,\n  SET_SHOW_OUTSIDE_AVAILABILITY,\n  SET_SHOW_CONTROLS,\n  RESET_FILTERS,\n  TOGGLE_FILTER_ELEMENT,\n} from \"../util/constants\";\n\nconst initState = {\n  showBookableSlots: false,\n  showOutsideAvailability: false,\n  showControls: false,\n};\n\nconst timetableFilterReducers = (state = initState, action) => {\n  switch (action.type) {\n    case SET_SHOW_BOOKABLE_SLOTS:\n      return { ...state, showBookableSlots: action.payload };\n    case SET_SHOW_OUTSIDE_AVAILABILITY:\n      return { ...state, showOutsideAvailability: action.payload };\n    case SET_SHOW_CONTROLS:\n      return { ...state, showControls: action.payload };\n    case RESET_FILTERS:\n      return initState;\n    case TOGGLE_FILTER_ELEMENT:\n      return { ...state, [action.element]: !state[action.element] };\n    default:\n      return state;\n  }\n};\n\nexport default timetableFilterReducers;\n","import testReducer from \"./testReducer\";\nimport dateReducer from \"./dateReducer\";\nimport driverReducer from \"./driverReducer\";\nimport entryFormReducer from \"./entryFormReducer\";\nimport errorReducer from \"./errorReducer\";\nimport appViewReducer from \"./appViewReducer\";\nimport slideInReducer from \"./slideInReducer\";\nimport editModeReducer from \"./editModeReducer\";\nimport timetableFilterReducers from \"./timetableFilterReducers\";\nimport { combineReducers } from \"redux\";\n\nconst allReducers = combineReducers({\n  test: testReducer,\n  date: dateReducer,\n  driver: driverReducer,\n  entryForm: entryFormReducer,\n  error: errorReducer,\n  appView: appViewReducer,\n  slideInToggled: slideInReducer,\n  editMode: editModeReducer,\n  viewFilters: timetableFilterReducers,\n});\n\nexport default allReducers;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n/** Reacstrap **/\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n/** Redux **/\nimport allReducers from \"./reducers\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}